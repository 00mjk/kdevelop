// $ANTLR 2.7.2: pascal.tree.g -> PascalStoreWalkerTokenTypes.txt$
PascalStoreWalker    // output token vocab name
BLOCK=4
IDLIST=5
ELIST=6
FUNC_CALL=7
PROC_CALL=8
SCALARTYPE=9
TYPELIST=10
VARIANT_TAG=11
VARIANT_TAG_NO_ID=12
VARIANT_CASE=13
CONSTLIST=14
FIELDLIST=15
ARGDECLS=16
VARDECL=17
ARGDECL=18
ARGLIST=19
TYPEDECL=20
FIELD=21
DOT=22
LIBRARY="library"=23
SEMI=24
EXPORTS="exports"=25
COMMA=26
LITERAL_index="index"=27
LITERAL_name="name"=28
USES="uses"=29
UNIT="unit"=30
END="end"=31
INTERFACE="interface"=32
IMPLEMENTATION="implementation"=33
BEGIN="begin"=34
PROGRAM="program"=35
LPAREN=36
RPAREN=37
INITIALIZATION="initialization"=38
FINALIZATION="finalization"=39
LABEL="label"=40
CONST="const"=41
RESOURCESTRING="resourcestring"=42
EQUAL=43
TYPE="type"=44
VAR="var"=45
COLON=46
PROCEDURE="procedure"=47
FORWARD="forward"=48
FUNCTION="function"=49
ARRAY="array"=50
OF="of"=51
EXTERNAL="external"=52
PUBLIC="public"=53
ALIAS="alias"=54
INTERRUPT=55
REGISTER="register"=56
PASCAL="pascal"=57
CDECL="cdecl"=58
STDCALL="stdcall"=59
POPSTACK="popstack"=60
SAVEREGISTERS="saveregisters"=61
INLINE="inline"=62
SAFECALL="safecall"=63
NEAR="near"=64
FAR="far"=65
NUM_INT=66
INTEGER="integer"=67
SHORTINT="shortint"=68
SMALLINT="smallint"=69
LONGINT="longint"=70
INT64="int64"=71
BYTE="byte"=72
WORD="word"=73
CARDINAL="cardinal"=74
QWORD="qword"=75
BOOLEAN="boolean"=76
BYTEBOOL=77
LONGBOOL=78
CHAR="char"=79
DOTDOT=80
ASSIGN=81
REAL="real"=82
SINGLE="single"=83
DOUBLE="double"=84
EXTENDED="extended"=85
COMP="comp"=86
STRING="string"=87
LBRACK=88
RBRACK=89
PACKED="packed"=90
RECORD="record"=91
CASE="case"=92
SET="set"=93
FILE="file"=94
POINTER=95
OBJECT="object"=96
VIRTUAL="virtual"=97
ABSTRACT="abstract"=98
PRIVATE="private"=99
PROTECTED="protected"=100
CONSTRUCTOR="constructor"=101
DESTRUCTOR="destructor"=102
CLASS="class"=103
OVERRIDE="override"=104
MESSAGE=105
PUBLISHED="published"=106
PROPERTY="property"=107
LITERAL_read="read"=108
LITERAL_write="write"=109
DEFAULT="default"=110
LITERAL_nodefault="nodefault"=111
LE=112
GE=113
LTH=114
GT=115
NOT_EQUAL=116
IN="in"=117
IS="is"=118
PLUS=119
MINUS=120
OR="or"=121
XOR="xor"=122
STAR=123
SLASH=124
DIV="div"=125
MOD="mod"=126
AND="and"=127
SHL="shl"=128
SHR="shr"=129
NOT="not"=130
AT=131
PLUSEQ=132
MINUSEQ=133
STAREQ=134
SLASHQE=135
GOTO="goto"=136
IF="if"=137
THEN="then"=138
ELSE="else"=139
WHILE="while"=140
DO="do"=141
REPEAT="repeat"=142
UNTIL="until"=143
FOR="for"=144
TO="to"=145
DOWNTO="downto"=146
WITH="with"=147
LBRACK2=148
RBRACK2=149
OPERATOR="operator"=150
RAISE="raise"=151
TRY="try"=152
EXCEPT="except"=153
FINALLY="finally"=154
ON="on"=155
STRING_LITERAL=156
CHR="chr"=157
NIL="nil"=158
NUM_REAL=159
IDENT=160
ABSOLUTE="absolute"=161
AS="as"=162
ASM="asm"=163
ASSEMBLER="assembler"=164
BREAK="break"=165
CONTINUE="continue"=166
DISPOSE="dispose"=167
EXPORT="export"=168
EXIT="exit"=169
FALSE="false"=170
INHERITED="inherited"=171
NEW="new"=172
SELF="self"=173
TRUE="true"=174
METHOD=175
ADDSUBOR=176
ASSIGNEQUAL=177
SIGN=178
FUNC=179
NODE_NOT_EMIT=180
MYASTVAR=181
LF=182
LCURLY=183
RCURLY=184
WS=185
COMMENT_1=186
COMMENT_2=187
EXPONENT=188
