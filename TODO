Short-Term:

mhk: move function areas of kdevcore into separate classes
mhk: try to implement breakpoints with the MarkInterface


Mid-Term:

mhk: improve documentation browsing
mhk: make all functions using filenames use KURLs instead
mhk: implement multiple-views per document
mhk: make the KDevPart template work standalone
mhk: add doc comments to the lib files I changed ;)
mhk: find a nicer way to remove dynamic menu entries from context menus


Long-Term:

all: write a lot more plugins ;)


Unsorted:

* Script project options 

* Implement removing sub projects.

* Implement Add Plugin

* Show .po files in project management

* Distinguish vanilla c++ support from c++ + Qt extensions
  and show signals/slots in the class view only with Qt.

* Fix the whole mess with header files which are parsed
  whenever the source file is parsed. This is implemented
  this way because header files don't appear in _SOURCES
  in KDE projects :-(

* Perhaps use konsole part for the application frontend

* Implement reverse I-search

* Check if a man page exists before offering the context menu
  item 'Goto manpage'

* Show intro page on startup

* Optional: Arrange classes by sub project

