# c++ keywords
@begin keyword 86

# KDE keywords -- start
K_DCOP Token_K_DCOP
k_dcop Token_k_dcop
k_dcop_signals Token_k_dcop_signals
# KDE keywords -- end

# Qt keywords -- start
Q_OBJECT Token_Q_OBJECT
signals Token_signals
slots Token_slots
emit Token_emit
# Qt keywords -- end

__int64 Token_int 
and Token_and
and_eq Token_and_eq
asm Token_asm
auto Token_auto
bitand Token_bitand
bitor Token_bitor
bool Token_bool
break Token_break
case Token_case
catch Token_catch
char Token_char
class Token_class
compl Token_compl
const Token_const
const_cast Token_const_cast
continue Token_continue
default Token_default
delete Token_delete
do Token_do
double Token_double
dynamic_cast Token_dynamic_cast
else Token_else
enum Token_enum
explicit Token_explicit
export Token_export
extern Token_extern
#false Token_false
float Token_float
for Token_for
friend Token_friend
goto Token_goto
if Token_if
inline Token_inline
int Token_int
long Token_long
mutable Token_mutable
namespace Token_namespace
new Token_new
not Token_not
not_eq Token_not_eq
operator Token_operator
or Token_or
or_eq Token_or_eq
private Token_private
protected Token_protected
public Token_public
register Token_register
reinterpret_cast Token_reinterpret_cast
return Token_return
short Token_short
signed Token_signed
sizeof Token_sizeof
static Token_static
static_cast Token_static_cast
struct Token_struct
switch Token_switch
template Token_template
this Token_this
throw Token_throw
#true Token_true
try Token_try
typedef Token_typedef
typeid Token_typeid
typename Token_typename
union Token_union
unsigned Token_unsigned
using Token_using
virtual Token_virtual
void Token_void
volatile Token_volatile
while Token_while
xor Token_xor
xor_eq Token_xor_eq
@end
