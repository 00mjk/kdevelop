<tip category="KDevelop|General">
<html>
<p>If you want to specify additional command-line options to your make program, you can set them in the <b>Project Options</b> dialog, <b>Make Options</b> tab.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>If you use functions of other libraries than the target is currently linked with, you can specify them in the <b>Target Options</b> dialog.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>If you want to change your application's version number, you can change it in the <b>Project Options</b> dialog, <b>General</b> tab, automatically updating your project.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>If you want to create a new project, choose "Project"->"New Project" from the menu.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>If you changed your applications' classes, you should update your API documentation by selecting "Build API Documentation" from the Build menu.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>You can save time if you select "Compile File" from the Build menu or the toolbar, to only compile your current implementation file.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>If you're searching for information on classes or classmembers, select "Search for Help on..." from the Help menu or use "Index" tab of the documentation tree.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>If you want to have info about something in the KDevelop window, select the "What's this?" button in the toolbar and click on the item you don't know about.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>Hint: You can search the documentation for a keyword by marking the word and select "Search in Documentation" in the right button popup menu.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>The KDevelop Team wishes you a nice day !
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>If you have found a bug in KDevelop, please let us know. Use KDE Bugzilla at http://bugs.kde.org/ or select "Help"->"Report Bug" from the menu.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>If you want to add your own documentation to the documentation tree use <b>Documentation Tree</b> tab in the <b>Configure KDevelop</b> dialog.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you can create a new class with "New Class" from the "Project" menu?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>To open a project, select "Open Project" from the "Project" menu.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>If you compile your project and get an error, you can click on the error message to switch to the file and line where the error occurred.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you can debug your programs within KDevelop by selecting "Debug"->"Start" in the menu?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you can switch between classes or namespaces by selecting the class or namespace combo in the toolbar?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you can preview images and icons by selecting them in the file viewer's trees?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you can set the compiler options in the <b>Project Options</b> dialog, <b>Configure Options</b> tab?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you can copy text from the documentation browser to the clipboard and insert it into your sources?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you should keep your library documentation up to date after installing new libraries?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you can configure the syntax-highlighting of the editor?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you can access more internal debug functions selecting "Debug"->"Viewers"?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you can move the cursor by words with Ctrl and left or right arrow?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that your source bookmarks are stored in the project?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that your documentation bookmarks are stored globally in KDevelop configuration?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you can start grep search from inside editor with context menu?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you can set the installation path in "Project"->"Project Options" "Configure Options" with just adding "--prefix=/install/path/" to the "Configure arguments"-list?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>...that you can compilie your project in "debug-mode" and "optimized-mode"?
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>If you wish to develop an application that
follows the KDE standards, you can get a
good start from menu item
New Project->C++->KDE->Application Framework.
Also, have a look at <a href="http://developer.kde.org/documentation/library/kdeqt/kde3arch">KDE 3.0 Architecture</a>.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>When writing a user manual in XML Docbook format,
as required in KDE applications, start with the
template index.docbook file generated by menu item
New Project->C++->KDE->Application Framework.
It contains comments that explain what should
go in each chapter and section.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>To get KDE Help Center to display an XML Docbook
manual in readable form, switch to "root" user,
cd to $KDEDIR/share/doc/HTML/en, check that no
other application has the same name as yours,
then mkdir appname, cd appname and make a
symbolic link back to your index.docbook file.
Next time you run your application, your manual
should be accessible from the Help menu.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>The Automake and QMake Manager windows provide
an excellent overview of your project structure, source code,
data files, icons and documentation.  Use left-click
to navigate or open files for text editing.  Use
right-click and popup menus to change the structure or
the way the application is built or to open files with
any application (e.g. a graphics editor).
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>In IDEAL User Interface mode, use the "." (stickpin)
icon to make a side or bottom window stay visible
after you open a file or finish compiling or whatever.
The icon is at the top right of the window.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>To see more detail or less on your compiler and linker
output, use Settings->Configure KDevelop->General and
the Compiler Output radio buttons.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>The small bar that separates the top and bottom part
of the Automake and QMake Manager windows can be
dragged to adjust the size of each part.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>Selecting Settings->Show Menubar is as heartbreaking as
letting go of a helium balloon ... :(  But don't worry, you
can get the Menubar back by pressing Ctrl+M.  That's
if you remember this tip when it happens to you ... ;-)
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>C++ applications can hog memory by failing to delete
objects that are no longer in use.  This is called a
memory leak.  Run Tools->Valgrind to test your
application for memory leaks before you release it.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>To create a "tarball" (a single compressed file) for
distributing your application, run Tools->Project
Distribution and Publishing->Create Source Archive.
When decompressed and untarred (tar xvzf), the
application can be installed by ./configure, make
and make install (probably as root).
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>Use Project->New Class to create skeleton files for
a new class.  Click on Generate QObject child class
or Generate QWidget child class if you wish to use
Qt signals and slots.
</html>
</tip>


<tip category="KDevelop|General">
<html>
<p>To handle data files in Automake Manager, first add
a subproject (e.g. pics) and, before adding any targets,
right-click on the new subproject and select Options,
Prefixes and Add.  Now enter a short name (e.g. pics
again) and the path to an installation directory
(e.g. in KDE, use $(kde_datadir)/appname/pics).  Now,
when you add a target, select Data File for the Primary,
"pics" for the prefix and any non-blank string for the
"file name" (it only matters in compileable targets).
Any files you add to the target "Data in pics" will be
copied when your application is installed.
</html>
</tip>

