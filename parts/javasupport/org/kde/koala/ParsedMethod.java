/***************************************************************************
                            ParsedMethod.java -  description
                             -------------------
    begin                : Tue Jul  3 08:02:55 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Tue Jul  3 08:02:55 2001, using kdoc parser/custom Java conversion backend.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

package org.kde.koala;

import org.kde.qt.*;
import java.util.*;
import java.lang.Error;

/**

 This object is the general abstraction for a method that
 has been parsed by the classparser.

 @author Jonas Nordin
 
 @short 
 This object is the general abstraction for a method that
 has been parsed by the classparser.
*/
public class ParsedMethod extends ParsedAttribute  {
	protected ParsedMethod(Class dummy){super((Class) null);}

	private native void newParsedMethod();
	public ParsedMethod() {
		super((Class) null);
		newParsedMethod();
	}
	protected native void finalize() throws InternalError;

/**  Adds an argument to this method. 
*/
	public native void addArgument( ParsedArgument anArg);

/** 
 Sets the status if this is a virtual method.

*/
	public native void setIsVirtual( boolean aState);
	public native void setIsVirtual();
	public native boolean isVirtual();

/** 
 Sets the status if this is a pure virtual method.

*/
	public native void setIsPure( boolean aState);
	public native void setIsPure();
	public native boolean isPure();

/** 
 Sets the status if this is a slot. 

*/
	public native void setIsSlot( boolean aState);
	public native void setIsSlot();
	public native boolean isSlot();

/** 
 Sets the status if this is a signal. 

*/
	public native void setIsSignal( boolean aState);
	public native void setIsSignal();
	public native boolean isSignal();

/** 
 Sets this method as a constructor.

*/
	public native void setIsConstructor( boolean aState);
	public native void setIsConstructor();
	public native boolean isConstructor();

/** 
 Sets this method as a destructor.

*/
	public native void setIsDestructor( boolean aState);
	public native void setIsDestructor();
	public native boolean isDestructor();

/** 
 Is the method an Objective-C method? 
     
*/
	public native void setIsObjectiveC( boolean is);
	public native void setIsObjectiveC();
	public native boolean isObjectiveC();

/** 
 Makes this object a copy of the supplied object. 

*/
	public native void copy( ParsedMethod aMethod);

/** 
 Is the supplied method equal to this one
 (regarding type, name and signature)? 
*/
	public native boolean isEqual( ParsedMethod method);

/**  Returns the object as a string(for tooltips etc) 
*/
	public native String asString();

/**  Outputs this object to stdout 
*/
	public native void out();
}
