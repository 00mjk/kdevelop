/***************************************************************************
                            ClassTreeNode.java -  description
                             -------------------
    begin                : Mon May 21 09:39:20 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Mon May 21 09:39:20 2001, using kdoc parser/custom Java conversion backend.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

package org.kde.koala;

import org.kde.qt.*;
import java.util.*;
import java.lang.Error;

/**

 Representation of a class as a node in a tree.
 
 @short 
 Representation of a class as a node in a tree.
*/
public class  ClassTreeNode implements QtSupport {
	private long _qt;
	private boolean _allocatedInJavaWorld = true;

	protected ClassTreeNode(Class dummy){}

	private native void newClassTreeNode();
	public ClassTreeNode() {
		newClassTreeNode();
	}
	protected native void finalize() throws InternalError;

/**  Sets the nodename. 
*/
	public native void setName( String aName);

/**  Sets the class data. 
*/
	public native void setClass( ParsedClass aClass);

/**  Tells if we found this class in the system. 
*/
	public native void setIsInSystem( boolean aState);

/**  Adds a child to this class node. 
*/
	public native void addChild( ClassTreeNode aChild);

/**  Prints this node (and its children) to stdout. 
*/
	public native void out();

/**  The width of this node's subtree. 
*/
	public native int width();
}
