/***************************************************************************
                            ParsedArgument.java -  description
                             -------------------
    begin                : Mon May 21 09:39:20 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Mon May 21 09:39:20 2001, using kdoc parser/custom Java conversion backend.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

package org.kde.koala;

import org.kde.qt.*;
import java.util.*;
import java.lang.Error;

/**

 This object represents the parsed argument of a method. 

 @author Jonas Nordin
 
 @short 
 This object represents the parsed argument of a method.
*/
public class  ParsedArgument implements QtSupport {
	private long _qt;
	private boolean _allocatedInJavaWorld = true;

	protected ParsedArgument(Class dummy){}

	private native void newParsedArgument();
	public ParsedArgument() {
		newParsedArgument();
	}
	protected native void finalize() throws InternalError;

/**  Sets the argument name 
*/
	public native void setName( String aName);

/**  Sets the type 
*/
	public native void setType( String aType);

/**  Sets the pos of the name between type 
*/
	public native void setNamePos( int pos);

/**  Makes this object a copy of the supplied object. 
*/
	public native void copy( ParsedArgument anArgument);

/**  Returns this arguments as a string. 
*/
	public native String toString();

/**  Returns a string made for persistant storage. 
*/
	public native String asPersistantString();

/**  Outputs this object to stdout 
*/
	public native void out();
}
