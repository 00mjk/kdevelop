/***************************************************************************
                            KDevCoreInterface.java -  description
                             -------------------
    begin                : Wed Dec 19 12:26:58 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Wed Dec 19 12:26:58 2001, using kalyptus 0.91.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

package org.kde.koala;

import org.kde.qt.*;
public interface KDevCore {

/** 
 Embed the given widget into the user interface.
     
*/
	void embedWidget( QWidget arg1, int arg2, String arg3);

/** 
 Make the given widget visible. Useful e.g. for the compiler
 frontend which wants to be shown in the foreground when
 a command is started.
     
*/
	void raiseWidget( QWidget arg1);

/** 
 This method should be called by a part that wants to show a
 context menu. The parameter context should be filled with
 information about the context in which this happens (see
 EditorContext, DocumentationContext, ClassContext, ...).
 Essentially, this method emits the signal contextMenu()
 which other parts can use to hook in.
     
*/
	void fillContextMenu( QPopupMenu popup, Context context);

/** 
       close the current project and opens the new one
     
*/
	void openProject( String projectFileName);

/** 
 "Goes" to a file. This is a generic method that is used
 e.g. by file trees. For non-text files (i.e. files which
 have a mime-type that doesn't start with "text/") it runs
 the respective application. Text files are loaded into an
 editor via # gotoSourceFile().
     
*/
	void gotoFile( KURL url);

/** 
 Loads a file into the HTML viewer.
     
*/
	void gotoDocumentationFile( KURL url, int embed);
	void gotoDocumentationFile( KURL url);

/** 
 Loads a file into the editor and jump to a line number.
     
*/
	void gotoSourceFile( KURL url, int lineNum, int embed);
	void gotoSourceFile( KURL url, int lineNum);
	void gotoSourceFile( KURL url);

/** 
 Goes to a given location in a source file and marks the line.
 If fileName is null, the mark is cleared.
 This is used by the debugger to mark the location where the
 the debugger has stopped.
     
*/
	void gotoExecutionPoint( String fileName, int lineNum);
	void gotoExecutionPoint( String fileName);

/** 
 Saves all modified buffers.
     
*/
	void saveAllFiles();

/** 
 Reverts all modified buffers to their version on disk.
     
*/
	void revertAllFiles();

/** 
 Sets a breakpoint in the editor document belong to fileName.
 If id==-1, the breakpoint is deleted.
     
*/
	void setBreakpoint( String fileName, int lineNum, int identifier, boolean enabled, boolean pending);

/** 
 Marks the component as running (or not running). As long as at least one
 component is running, the stop button is enabled. When it is pressed,
 all components get a stopButtonClicked().
     
*/
	void running( KDevPart which, boolean runs);

/** 
 Puts a message in the status bar.
     
*/
	void message( String str);

/** 
 The manager used to manage the parts.
	 
*/
	PartManager partManager();

/** 
 The interface to the editor used
     
*/
	Editor editor();

/** 
 The statusbar used
     
*/
	QStatusBar statusBar();
	
	public static final int SelectView = 0;
	public static final int OutputView = 1;
	public static final int DocumentView = 2;
	public static final int Replace = 0;
	public static final int SplitHorizontal = 1;
	public static final int SplitVertical = 2;
}
