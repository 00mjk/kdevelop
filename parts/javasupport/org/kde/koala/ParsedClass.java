/***************************************************************************
                            ParsedClass.java -  description
                             -------------------
    begin                : Mon May 21 09:39:20 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Mon May 21 09:39:20 2001, using kdoc parser/custom Java conversion backend.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

package org.kde.koala;

import org.kde.qt.*;
import java.util.*;
import java.lang.Error;

/**

                                                                         
   This program is free software; you can redistribute it and/or modify  
   it under the terms of the GNU General Public License as published by  
   the Free Software Foundation; either version 2 of the License, or     
   (at your option) any later version.                                    
                                                                         

 @short 
                                                                         *
   This program is free software; you can redistribute it and/or modify  *
   it under the terms of the GNU General Public License as published by  *
   the Free Software Foundation; either version 2 of the License, or     *
   (at your option) any later version.
*/
public class ParsedClass extends ParsedClassContainer  {
	protected ParsedClass(Class dummy){super((Class) null);}

	private native void newParsedClass();
	public ParsedClass() {
		super((Class) null);
		newParsedClass();
	}
	protected native void finalize() throws InternalError;

/** 
 Removes all items in the store with references to the file.

*/
	public native void removeWithReferences( String aFile);

/** 
 Removes a method matching the specification (from either 'methods'
 or 'slotList').

*/
	public native void removeMethod( ParsedMethod aMethod);

/**  Clears all attribute values. 
*/
	public native void clearDeclaration();

/** 
 Adds a parent.

*/
	public native void addParent( ParsedParent aParent);

/** 
 Adds a friend. 

*/
	public native void addFriend( String aName);

/** 
 Adds a signal. 

*/
	public native void addSignal( ParsedMethod aMethod);

/** 
 Adds a slot. 

*/
	public native void addSlot( ParsedMethod aMethod);

/**  Add a signal.slot mapping. 
*/
//public native void addSignalSlotMap( ParsedSignalSlot aSS);

/**  
 Sets the state if this is a subclass. 

*/
	public native void setIsSubClass( boolean aState);

/** 
 Gets a method by comparing with another method. 

*/
	public native ParsedMethod getMethod( ParsedMethod aMethod);

/** 
 Gets a signal by using its name and arguments. 

*/
	public native ParsedMethod getSignalByNameAndArg( String aName);

/** 
 Gets a slot by using its' name and arguments. 

*/
	public native ParsedMethod getSlotByNameAndArg( String aName);

/** 
 Checks if this class has the named parent. 

*/
	public native boolean hasParent( String aName);

/**  Check if the class has any virtual methods. 
*/
	public native boolean hasVirtual();

/**  Outputs the class as text on stdout. 
*/
	public native void out();
}
