/***************************************************************************
                            KDevLanguageSupport.java -  description
                             -------------------
    begin                : Wed Dec 19 12:26:58 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Wed Dec 19 12:26:58 2001, using kalyptus 0.91.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

package org.kde.koala;

import org.kde.qt.*;
import java.util.*;
import java.lang.Error;

/**

 The interface to programming language specific features
 
 See {@link KDevLanguageSupportSignals} for signals emitted by KDevLanguageSupport.

 @short 
 The interface to programming language specific features
 
*/
public class KDevLanguageSupport extends KDevPart  {
	protected KDevLanguageSupport(Class dummy){super((Class) null);}

	private native void newKDevLanguageSupport( KDevApi api, QObject parent, String name);
	public KDevLanguageSupport( KDevApi api, QObject parent, String name) {
		super((Class) null);
		newKDevLanguageSupport( api, parent, name);

		connect(this, SIGNAL("addClass()"), this, SLOT("addClass()"));
		connect(this, SIGNAL("addMethod(String)"), this, SLOT("addMethod(String)"));
		connect(this, SIGNAL("addAttribute(String)"), this, SLOT("addAttribute(String)"));
	}
	private native void newKDevLanguageSupport( KDevApi api);
	public KDevLanguageSupport( KDevApi api) {
		this(api, null, null);
	}
	protected native void finalize() throws InternalError;

/** 
 Returns the feature set of the language. This is e.g. used
 by the class view to decide which organizer items to display
 and which not.
     
*/
	public native int features();

/**
 Sets the feature set for the language.

*/
	public native void setFeatures( int features);

/** 
 Opens a "New class" dialog and adds the configured
 class to the sources.
 TODO: Use KDevNode stuff for this
     
*/
	public native void addClass();

/** 
 Opens an "Add method" dialog and adds the configured
 method to the sources.
     
*/
	public native void addMethod( String className);

/** 
 Opens an "Add attribute" dialog and adds the configured
 method to the sources.
     
*/
	public native void addAttribute( String className);

/**  
 returns a typical filterlist  for the support language
 should be configurable in the languagesupport dialog
 example ".cpp;.h;.c";
 used in grepview, adding files
     
*/
	public native ArrayList fileFilters();
	public native void setFileFilters( String[] fileFilters);

/** Slot which emits an updatedSourceInfo() signal, when called */
	public native void updatedJavaSourceInfo();

	public static final int Classes = 1;
	public static final int Structs = 2;
	public static final int Functions = 4;
	public static final int Variables = 8;
	public static final int Namespaces = 16;
	public static final int Signals = 32;
	public static final int Slots = 64;
	public static final int Declarations = 128;
	public static final int NewClass = 512;
	public static final int AddMethod = 1024;
	public static final int AddAttribute = 2048;
}
