/***************************************************************************
                            Document.java -  description
                             -------------------
    begin                : Fri Dec 21 13:45:30 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Fri Dec 21 13:45:30 2001, using kalyptus 0.91.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

package org.kde.koala;

import org.kde.qt.*;
import java.util.*;
import java.lang.Error;

/**

 \brief The basic interface for a document

 The basic interface for a document
 contained in the editor.

 The basic interface allows to load and save the file.

 A document can be queried for more complex interfaces.
 
 See {@link DocumentSignals} for signals emitted by Document.

 See {@link DocumentEventHandling} for event handlers to override in subclasses of Document.

 @short 
 \brief The basic interface for a document

*/
public class Document extends ReadWritePart  {
	protected Document(Class dummy){super((Class) null);}


/** 
 \brief Query for an advanced interface

 Returns a pointer to a more
 advanced document interface.

 \param ifname The name of the interface

 \return Pointer to the interface, or 0 if the document
 does not provide that interface.
   
*/
	public native DocumentInterface queryInterface( String ifname);

/** 
 \brief Has file been modified on disc?

 Tells if the file has been modified on the disc while
 being edited.

 \return true, if the file has been modified,
         false, else
   
*/
	public native boolean modifiedOnDisc();
	public native DCOPRef dcopInterface();
	private native void newDocument( Editor parent);
	public Document( Editor parent) {
		super((Class) null);
		newDocument( parent);
	}
	protected native Editor parentEditor();
	protected native void resetModifiedTime();
	protected native boolean shouldBeSaved();
	protected native void slotSaveAs();
	protected native void slotSave();
	protected native void slotRevert();
}
