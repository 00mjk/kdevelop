/***************************************************************************
                            PersistantClassStore.java -  description
                             -------------------
    begin                : Tue Jul  3 08:02:55 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Tue Jul  3 08:02:55 2001, using kdoc parser/custom Java conversion backend.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

package org.kde.koala;

import org.kde.qt.*;
import java.util.*;
import java.lang.Error;

/**
 This class handles all persistant storage of classes,
 global functions and variables.

 @author Jonas Nordin
 
 @short  This class handles all persistant storage of classes,
 global functions and variables.
*/
public class  PersistantClassStore implements QtSupport {
	private long _qt;
	private boolean _allocatedInJavaWorld = true;

	protected PersistantClassStore(Class dummy){}

	private native void newPersistantClassStore();
	public PersistantClassStore() {
		newPersistantClassStore();
	}
	private native void newPersistantClassStore( String aFilename);
	public PersistantClassStore( String aFilename) {
		newPersistantClassStore( aFilename);
	}
	protected native void finalize() throws InternalError;

/**  Set the path where the database files should be stored.

*/
	public native void setPath( String aPath);

/**  Set the name of the file to read/write. 

*/
	public native void setFilename( String aFilename);

/**  Open the file. 
*/
	public native boolean open();

/**  Close the file. 
*/
	public native void close();

/**  Store a class in the database. 

*/
	public native void storeClass( ParsedClass aClass);

/**  Remove a class from the database. 

*/
	public native void removeClass( String arg1);

/**  Has the store been created? 
*/
	public native boolean exists();

/**  Check if a class exists in the store. 
*/
	public native boolean hasClass( String aName);

/**  Fetch a class from the database using its' name. 
*/
	public native ParsedClass getClassByName( String aName);
}
