/***************************************************************************
                            JavaClassParser.java -  description
                             -------------------
    begin                : Wed May 23 14:16:27 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Wed May 23 14:16:27 2001, using kdoc parser/custom Java conversion backend.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

import org.kde.qt.*;
import org.kde.koala.*;
import java.util.*;
import java.lang.Error;

/**
 This class handles the parsing and generation of all C++ and C
 constructions. The classparser has a store in which all elements that
 have been parsed is stored. The external interface to this class is
 very simple. Just call parse() and you're off.

 @author Jonas Nordin

 @short Handles parsing of C++ and C expressions.
 
*/
public class  JavaClassParser implements QtSupport {
	private long _qt;
	private boolean _allocatedInJavaWorld = true;

	protected JavaClassParser(Class dummy){}

	private native void newJavaClassParser( ClassStore classstore);
	public JavaClassParser( ClassStore classstore) {
		newJavaClassParser( classstore);
	}
	protected native void finalize() throws InternalError;

/** 
 Parse the file and store the parsed classes found.

*/
	public native boolean parse( String file);

/**  Remove all parsed classes 
*/
	public native void wipeout();

/**  Output this object as text on stdout 
*/
	public native void out();
	public native void removeWithReferences( String aFile);
}
