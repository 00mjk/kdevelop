/***************************************************************************
                            KDevFactory.cpp -  description
                             -------------------
    begin                : Wed Dec 19 15:43:05 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Wed Dec 19 15:43:05 2001, using kalyptus 0.91.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

#define _BOOL_H_
#include <kdevfactory.h>
#include <qstring.h>
#include <qcstring.h>

#include <qtjava/QtSupport.h>
#include <kdejava/KDESupport.h>
#include <kdejava/KDevFactory.h>

JNIEXPORT void JNICALL
Java_org_kde_koala_KDevFactory_finalize(JNIEnv *env, jobject obj)
{
	if (QtSupport::allocatedInJavaWorld(env, obj) && ((KDevFactory*)QtSupport::getQt(env, obj))->parent() == (QObject *) 0) {
		delete (KDevFactory*)QtSupport::getQt(env, obj);
		QtSupport::setQt(env, obj, 0);
	}
	return;
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_KDevFactory_createPart__Lorg_kde_koala_KDevApi_2Lorg_kde_qt_QObject_2_3Ljava_lang_String_2(JNIEnv *env, jobject obj, jobject api, jobject parent, jobjectArray args)
{
static QStringList * _qlist_args = 0;
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KDevFactory*) QtSupport::getQt(env, obj))->createPart((KDevApi*) QtSupport::getQt(env, api), (QObject*) QtSupport::getQt(env, parent), (QStringList&) * (QStringList *) QtSupport::toQStringList(env, args, &_qlist_args)), "org.kde.koala.KDevPart");
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_KDevFactory_createPart__Lorg_kde_koala_KDevApi_2Lorg_kde_qt_QObject_2(JNIEnv *env, jobject obj, jobject api, jobject parent)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KDevFactory*) QtSupport::getQt(env, obj))->createPart((KDevApi*) QtSupport::getQt(env, api), (QObject*) QtSupport::getQt(env, parent), QStringList()), "org.kde.koala.KDevPart");
}

