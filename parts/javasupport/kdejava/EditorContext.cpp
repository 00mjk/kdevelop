/***************************************************************************
                            EditorContext.cpp -  description
                             -------------------
    begin                : Mon May 28 10:58:39 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Mon May 28 10:58:39 2001, using kdoc parser/custom Java conversion backend.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

#define _BOOL_H_
#include <kdevcore.h>
#include <qstring.h>
#include <qcstring.h>

#include <qtjava/QtSupport.h>
#include <kdejava/EditorContext.h>

class EditorContextJBridge : public EditorContext
{
public:
	EditorContextJBridge(const QString& linestr, int col) : EditorContext(linestr, col) {}
	~EditorContextJBridge() {}
};


JNIEXPORT void JNICALL
Java_org_kde_koala_EditorContext_newEditorContext(JNIEnv *env, jobject obj, jstring linestr, jint col)
{
static QString * _qstring_linestr = 0;
	if (QtSupport::getQt(env, obj) == 0) {
		QtSupport::setQt(env, obj, new EditorContextJBridge((QString&) * (QString *) QtSupport::toQString(env, linestr, &_qstring_linestr), (int) col));
		QtSupport::setObjectForQtKey(env, obj, QtSupport::getQt(env, obj));
	}
	return;
}

JNIEXPORT void JNICALL
Java_org_kde_koala_EditorContext_finalize(JNIEnv *env, jobject obj)
{
	if (QtSupport::allocatedInJavaWorld(env, obj)) {
		delete (EditorContext*)QtSupport::getQt(env, obj);
		QtSupport::setQt(env, obj, 0);
	}
	return;
}

JNIEXPORT jstring JNICALL
Java_org_kde_koala_EditorContext_linestr(JNIEnv *env, jobject obj)
{
	QString  _qstring;
	_qstring = ((EditorContextJBridge*) QtSupport::getQt(env, obj))->linestr();
	return QtSupport::fromQString(env, &_qstring);
}

JNIEXPORT jint JNICALL
Java_org_kde_koala_EditorContext_col(JNIEnv *env, jobject obj)
{
	return (jint) ((EditorContextJBridge*) QtSupport::getQt(env, obj))->col();
}

