/***************************************************************************
                            Editor.cpp -  description
                             -------------------
    begin                : Fri Dec 21 13:45:30 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Fri Dec 21 13:45:30 2001, using kalyptus 0.91.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

#define _BOOL_H_
#include <keditor/editor.h>
#include <qstring.h>
#include <qcstring.h>

#include <qtjava/QtSupport.h>
#include <kdejava/KDESupport.h>
#include <kdejava/Editor.h>

JNIEXPORT void JNICALL
Java_org_kde_koala_Editor_finalize(JNIEnv *env, jobject obj)
{
	if (QtSupport::allocatedInJavaWorld(env, obj) && ((KEditor::Editor*)QtSupport::getQt(env, obj))->parent() == (QObject *) 0) {
		delete (KEditor::Editor*)QtSupport::getQt(env, obj);
		QtSupport::setQt(env, obj, 0);
	}
	return;
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_queryInterface(JNIEnv *env, jobject obj, jstring ifname)
{
static QString * _qstring_ifname = 0;
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KEditor::Editor*) QtSupport::getQt(env, obj))->queryInterface((QString&) * (QString *) QtSupport::toQString(env, ifname, &_qstring_ifname)), "org.kde.koala.EditorInterface");
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_document(JNIEnv *env, jobject obj, jobject url)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KEditor::Editor*) QtSupport::getQt(env, obj))->document((KURL&) *(KURL *) QtSupport::getQt(env, url)), "org.kde.koala.Document");
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_createDocument__Lorg_kde_qt_QWidget_2Lorg_kde_koala_KURL_2(JNIEnv *env, jobject obj, jobject parentWidget, jobject url)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KEditor::Editor*) QtSupport::getQt(env, obj))->createDocument((QWidget*) QtSupport::getQt(env, parentWidget), (KURL&) *(KURL *) QtSupport::getQt(env, url)), "org.kde.koala.Document");
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_createDocument__(JNIEnv *env, jobject obj)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KEditor::Editor*) QtSupport::getQt(env, obj))->createDocument(0, ""), "org.kde.koala.Document");
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_currentDocument(JNIEnv *env, jobject obj)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KEditor::Editor*) QtSupport::getQt(env, obj))->currentDocument(), "org.kde.koala.Document");
}

JNIEXPORT void JNICALL
Java_org_kde_koala_Editor_activePartChanged(JNIEnv *env, jobject obj, jobject part)
{
	((KEditor::Editor*) QtSupport::getQt(env, obj))->activePartChanged((KParts::Part*) QtSupport::getQt(env, part));
	return;
}

	// From KXMLGUIClient

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_action__Ljava_lang_String_2(JNIEnv *env, jobject obj, jstring name)
{
static QCString * _qstring_name = 0;
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KEditor::Editor*) QtSupport::getQt(env, obj))->action((char*) QtSupport::toCharString(env, name, &_qstring_name)), "org.kde.koala.KAction");
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_action__Lorg_kde_qt_QDomElement_2(JNIEnv *env, jobject obj, jobject element)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KEditor::Editor*) QtSupport::getQt(env, obj))->action((QDomElement&) *(QDomElement *) QtSupport::getQt(env, element)), "org.kde.koala.KAction");
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_actionCollection(JNIEnv *env, jobject obj)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KEditor::Editor*) QtSupport::getQt(env, obj))->actionCollection(), "org.kde.koala.KActionCollection");
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_instance(JNIEnv *env, jobject obj)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KEditor::Editor*) QtSupport::getQt(env, obj))->instance(), "org.kde.koala.KInstanceInterface");
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_domDocument(JNIEnv *env, jobject obj)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)new  QDomDocument (((KEditor::Editor*) QtSupport::getQt(env, obj))->domDocument()), "org.kde.qt.QDomDocument", TRUE);
}

JNIEXPORT jstring JNICALL
Java_org_kde_koala_Editor_xmlFile(JNIEnv *env, jobject obj)
{
	QString  _qstring;
	_qstring = ((KEditor::Editor*) QtSupport::getQt(env, obj))->xmlFile();
	return QtSupport::fromQString(env, &_qstring);
}

JNIEXPORT jstring JNICALL
Java_org_kde_koala_Editor_localXMLFile(JNIEnv *env, jobject obj)
{
	QString  _qstring;
	_qstring = ((KEditor::Editor*) QtSupport::getQt(env, obj))->localXMLFile();
	return QtSupport::fromQString(env, &_qstring);
}

JNIEXPORT void JNICALL
Java_org_kde_koala_Editor_setXMLGUIBuildDocument(JNIEnv *env, jobject obj, jobject doc)
{
	((KEditor::Editor*) QtSupport::getQt(env, obj))->setXMLGUIBuildDocument((QDomDocument&) *(QDomDocument *) QtSupport::getQt(env, doc));
	return;
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_xmlguiBuildDocument(JNIEnv *env, jobject obj)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)new QDomDocument (((KEditor::Editor*) QtSupport::getQt(env, obj))->xmlguiBuildDocument()), "org.kde.qt.QDomDocument", TRUE);
}

JNIEXPORT void JNICALL
Java_org_kde_koala_Editor_setFactory(JNIEnv *env, jobject obj, jobject factory)
{
	((KEditor::Editor*) QtSupport::getQt(env, obj))->setFactory((KXMLGUIFactory*) QtSupport::getQt(env, factory));
	return;
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_factory(JNIEnv *env, jobject obj)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KEditor::Editor*) QtSupport::getQt(env, obj))->factory(), "org.kde.koala.KXMLGUIFactory");
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_parentClient(JNIEnv *env, jobject obj)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KEditor::Editor*) QtSupport::getQt(env, obj))->parentClient(), "org.kde.koala.EditorInterface");
}

JNIEXPORT void JNICALL
Java_org_kde_koala_Editor_insertChildClient(JNIEnv *env, jobject obj, jobject child)
{
	((KEditor::Editor*) QtSupport::getQt(env, obj))->insertChildClient((KEditor::Editor*) QtSupport::getQt(env, child));
	return;
}

JNIEXPORT void JNICALL
Java_org_kde_koala_Editor_removeChildClient(JNIEnv *env, jobject obj, jobject child)
{
	((KEditor::Editor*) QtSupport::getQt(env, obj))->removeChildClient((KEditor::Editor*) QtSupport::getQt(env, child));
	return;
}

JNIEXPORT void JNICALL
Java_org_kde_koala_Editor_setClientBuilder(JNIEnv *env, jobject obj, jobject builder)
{
	((KEditor::Editor*) QtSupport::getQt(env, obj))->setClientBuilder((KXMLGUIBuilder*) QtSupport::getQt(env, builder));
	return;
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_Editor_clientBuilder(JNIEnv *env, jobject obj)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)((KEditor::Editor*) QtSupport::getQt(env, obj))->clientBuilder(), "org.kde.koala.KXMLGUIBuilderInterface");
}

JNIEXPORT void JNICALL
Java_org_kde_koala_Editor_reloadXML(JNIEnv *env, jobject obj)
{
	((KEditor::Editor*) QtSupport::getQt(env, obj))->reloadXML();
	return;
}

JNIEXPORT void JNICALL
Java_org_kde_koala_Editor_unplugActionList(JNIEnv *env, jobject obj, jstring name)
{
static QString * _qstring_name = 0;
	((KEditor::Editor*) QtSupport::getQt(env, obj))->unplugActionList((QString&) * (QString *) QtSupport::toQString(env, name, &_qstring_name));
	return;
}

JNIEXPORT void JNICALL
Java_org_kde_koala_Editor_addStateActionEnabled(JNIEnv *env, jobject obj, jstring state, jstring action)
{
static QString * _qstring_action = 0;
static QString * _qstring_state = 0;
	((KEditor::Editor*) QtSupport::getQt(env, obj))->addStateActionEnabled((QString&) * (QString *) QtSupport::toQString(env, state, &_qstring_state), (QString&) * (QString *) QtSupport::toQString(env, action, &_qstring_action));
	return;
}

JNIEXPORT void JNICALL
Java_org_kde_koala_Editor_addStateActionDisabled(JNIEnv *env, jobject obj, jstring state, jstring action)
{
static QString * _qstring_action = 0;
static QString * _qstring_state = 0;
	((KEditor::Editor*) QtSupport::getQt(env, obj))->addStateActionDisabled((QString&) * (QString *) QtSupport::toQString(env, state, &_qstring_state), (QString&) * (QString *) QtSupport::toQString(env, action, &_qstring_action));
	return;
}

//JNIEXPORT  JNICALL
//Java_org_kde_koala_Editor_getActionsToChangeForState(JNIEnv *env, jobject obj, jstring state)
//{
//static QString * _qstring_state = 0;
//	return () ((KEditor::Editor*) QtSupport::getQt(env, obj))->getActionsToChangeForState((QString&) * (QString *) QtSupport::toQString(env, state, &_qstring_state));
//}

JNIEXPORT jstring JNICALL
Java_org_kde_koala_Editor_findMostRecentXMLFile(JNIEnv *env, jclass obj, jobjectArray files, jstring doc)
{
	QString  _qstring;
static QString * _qstring_doc = 0;
static QStringList * _qlist_files = 0;
	_qstring = KEditor::Editor::findMostRecentXMLFile((QStringList&) * (QStringList *) QtSupport::toQStringList(env, files, &_qlist_files), (QString&) * (QString *) QtSupport::toQString(env, doc, &_qstring_doc));
	return QtSupport::fromQString(env, &_qstring);
}

//JNIEXPORT void JNICALL
//Java_org_kde_koala_Editor_setInstance(JNIEnv *env, jobject obj, jobject instance)
//{
//	((KEditor::Editor*) QtSupport::getQt(env, obj))->protected_setInstance((KInstance*) QtSupport::getQt(env, instance));
//	return;
//}

//JNIEXPORT void JNICALL
//Java_org_kde_koala_Editor_setXMLFile__Ljava_lang_String_2ZZ(JNIEnv *env, jobject obj, jstring file, jboolean merge, jboolean setXMLDoc)
//{
//static QString * _qstring_file = 0;
//	((KEditor::Editor*) QtSupport::getQt(env, obj))->protected_setXMLFile((QString&) * (QString *) QtSupport::toQString(env, file, &_qstring_file), (bool) merge, (bool) setXMLDoc);
//	return;
//}

//JNIEXPORT void JNICALL
//Java_org_kde_koala_Editor_setXMLFile__Ljava_lang_String_2(JNIEnv *env, jobject obj, jstring file)
//{
//static QString * _qstring_file = 0;
//	((KEditor::Editor*) QtSupport::getQt(env, obj))->protected_setXMLFile((QString&) * (QString *) QtSupport::toQString(env, file, &_qstring_file), false, true);
//	return;
//}

//JNIEXPORT void JNICALL
//Java_org_kde_koala_Editor_setLocalXMLFile(JNIEnv *env, jobject obj, jstring file)
//{
//static QString * _qstring_file = 0;
//	((KEditor::Editor*) QtSupport::getQt(env, obj))->protected_setLocalXMLFile((QString&) * (QString *) QtSupport::toQString(env, file, &_qstring_file));
//	return;
//}

//JNIEXPORT void JNICALL
//Java_org_kde_koala_Editor_setXML__Ljava_lang_String_2Z(JNIEnv *env, jobject obj, jstring document, jboolean merge)
//{
//static QString * _qstring_document = 0;
//	((KEditor::Editor*) QtSupport::getQt(env, obj))->protected_setXML((QString&) * (QString *) QtSupport::toQString(env, document, &_qstring_document), (bool) merge);
//	return;
//}

//JNIEXPORT void JNICALL
//Java_org_kde_koala_Editor_setXML__Ljava_lang_String_2(JNIEnv *env, jobject obj, jstring document)
//{
//static QString * _qstring_document = 0;
//	((KEditor::Editor*) QtSupport::getQt(env, obj))->protected_setXML((QString&) * (QString *) QtSupport::toQString(env, document, &_qstring_document), false);
//	return;
//}

//JNIEXPORT void JNICALL
//Java_org_kde_koala_Editor_setDOMDocument__Lorg_kde_qt_QDomDocument_2Z(JNIEnv *env, jobject obj, jobject document, jboolean merge)
//{
//	((KEditor::Editor*) QtSupport::getQt(env, obj))->protected_setDOMDocument((QDomDocument&) *(QDomDocument *) QtSupport::getQt(env, document), (bool) merge);
//	return;
//}

//JNIEXPORT void JNICALL
//Java_org_kde_koala_Editor_setDOMDocument__Lorg_kde_qt_QDomDocument_2(JNIEnv *env, jobject obj, jobject document)
//{
//	((KEditor::Editor*) QtSupport::getQt(env, obj))->protected_setDOMDocument((QDomDocument&) *(QDomDocument *) QtSupport::getQt(env, document), false);
//	return;
//}

//JNIEXPORT void JNICALL
//Java_org_kde_koala_Editor_conserveMemory(JNIEnv *env, jobject obj)
//{
//	((KEditor::Editor*) QtSupport::getQt(env, obj))->protected_conserveMemory();
//	return;
//}

//JNIEXPORT void JNICALL
//Java_org_kde_koala_Editor_stateChanged(JNIEnv *env, jobject obj, jstring newstate)
//{
//static QString * _qstring_newstate = 0;
//	((KEditor::Editor*) QtSupport::getQt(env, obj))->protected_stateChanged((QString&) * (QString *) QtSupport::toQString(env, newstate, &_qstring_newstate));
//	return;
//}	
