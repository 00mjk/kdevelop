/***************************************************************************
                            DocumentInterface.cpp -  description
                             -------------------
    begin                : Fri Dec 21 13:45:30 2001
    copyright            : (C) 2000-2001 Lost Highway Ltd.
    email                : Richard_Dale@tipitina.demon.co.uk
    generated by         : duke@tipitina on Fri Dec 21 13:45:30 2001, using kalyptus 0.91.
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
***************************************************************************/

#define _BOOL_H_
#include <keditor/interface.h>
#include <qstring.h>
#include <qcstring.h>

#include <qtjava/QtSupport.h>
#include <kdejava/KDESupport.h>
#include <kdejava/DocumentInterface.h>

class DocumentInterfaceJBridge : public KEditor::DocumentInterface
{
public:
	DocumentInterfaceJBridge(KEditor::Document* parent, KEditor::Editor* editor) : DocumentInterface(parent, editor) {}
	void childEvent(QChildEvent* arg1) {
		if (! QtSupport::eventDelegate(this, "childEvent", arg1, "org.kde.qt.QChildEvent")) {
			QObject::childEvent(arg1);
		}
		return;
	}
	void customEvent(QCustomEvent* arg1) {
		if (! QtSupport::eventDelegate(this, "customEvent", arg1, "org.kde.qt.QCustomEvent")) {
			QObject::customEvent(arg1);
		}
		return;
	}
	void timerEvent(QTimerEvent* arg1) {
		if (! QtSupport::eventDelegate(this, "timerEvent", arg1, "org.kde.qt.QTimerEvent")) {
			QObject::timerEvent(arg1);
		}
		return;
	}
};


JNIEXPORT void JNICALL
Java_org_kde_koala_DocumentInterface_newDocumentInterface(JNIEnv *env, jobject obj, jobject parent, jobject editor)
{
	if (QtSupport::getQt(env, obj) == 0) {
		QtSupport::setQt(env, obj, new DocumentInterfaceJBridge((KEditor::Document*) QtSupport::getQt(env, parent), (KEditor::Editor*) QtSupport::getQt(env, editor)));
		QtSupport::setObjectForQtKey(env, obj, QtSupport::getQt(env, obj));
	}
	return;
}

JNIEXPORT jobject JNICALL
Java_org_kde_koala_DocumentInterface_document(JNIEnv *env, jobject obj)
{
	return (jobject) QtSupport::objectForQtKey(env, (void *)((DocumentInterfaceJBridge*) QtSupport::getQt(env, obj))->document(), "org.kde.koala.Document");
}

//JNIEXPORT  JNICALL
//Java_org_kde_koala_DocumentInterface_dcopInterface(JNIEnv *env, jobject obj)
//{
//	return () ((DocumentInterfaceJBridge*) QtSupport::getQt(env, obj))->dcopInterface();
//}

