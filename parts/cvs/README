===============================================================================
This file contains a summary of any concern about the CvsPart plugin for Gideon
===============================================================================

(Feel free to add your comments here, but first fill this section so we can
know who said what and elaborate :-)
[M] == Mario Scalas [marios]

[M] Currently CvsPart plugin is really primitive when compared to Cervisia. The
better option will be integrating Cervisia withing gideon (read FAQ).

Current features:
* Can add, commit, remove, diff, update, log
* Log enables creations of diff files between releases
* Can add files to (remove from) .cvsignore file so they will not be handled
  by CVS.
* It does intercept events like adding and removing project's files, asking
  for user action.

What cvspart when compared to Cervisia is really missing:

(a) the visual feedback: there is no way for people to understand what files
    have been update, patched, modified, ...
(b) lots of useful dialogs like displaying branches ...
(c) the ability to fetch releases for files (hmmm ... would this apply to single
    files only?)

To Do list

1. When committing files must be committed differently by their type: binary
   files must be committed with "-kb" command line option. A list of file
   extension is what fits better: when committing two file lists will be
   separately committed, the one with binary files, the others with text files.
   This will make easier switching to cvsservice when time arises :-)
2. Adding the import feature for checking out modules from repositories: fetch
   a modules list and ask the user which one he wants to commit

F.A.Q.

Q: Why not integrate Cervisia in KDevelop?
A: This would be a nice but CervisiaPart component is not really designed for
   being embedded in KDevelop. We'll need to adapt it at source level to fit
   in gideon's architecture but this is not possible since Cervisia is QPL.
   The only thing we could try is to use Cervisia's DCOP cvsservice but this
   really needs experimentation since I'm not really proficient with DCOP ;-).
   Feel free to provide and source code for this kind of integration.

Q: Does cvspart support login with :pserver: or :ext: ?
A: You _must_ be logged in before using cvs operations because there is no
   support for login (this will change if requests come).

