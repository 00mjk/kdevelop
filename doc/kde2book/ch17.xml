<chapter label="17" role="chapter" id="ch17">
<title>Managing Source Code with CVS</title>
<para><emphasis>By David Sweet</emphasis></para>
<highlights>
<itemizedlist mark="bullet" spacing="compact">
<title>In This Chapter</title>
<listitem><para><emphasis role="strong"><link linkend="ch17lev1sec1">What is CVS?</link></emphasis></para></listitem>
<listitem><para><emphasis role="strong"><link linkend="ch17lev1sec2">CVS Organization</link></emphasis></para></listitem>
<listitem><para><emphasis role="strong"><link linkend="ch17lev1sec3">Accessing Source Code in CVS</link></emphasis></para></listitem>
<listitem><para><emphasis role="strong"><link linkend="ch17lev1sec4">Installing and Using CVSup</link></emphasis></para></listitem>
<listitem><para><link linkend="ch17lev1sec5"><emphasis role="strong">Installing and Using</emphasis> <literal>cvs</literal></link></para></listitem>
</itemizedlist>
</highlights>
<para>The <indexterm><primary>Concurrent Versions System</primary><see>CVS</see></indexterm><indexterm><primary>CVS</primary><secondary>(Concurrent Versions System)</secondary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>(Concurrent Versions System)</tertiary></indexterm>open nature of the KDE project is reflected not only in the fact that the source code is freely distributed, but in the way it is distributed. The project uses CVS, the Concurrent Versions System, to maintain a source-code repository and keep the most up-to-date versions of the development code continuously available for download by interested parties.</para>
<section id="ch17lev1sec1">
<title>What Is CVS?</title>
<para>CVS, <indexterm><primary>CVS</primary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary></indexterm>the Concurrent Versions System, is used by the KDE project to manage the KDE source code&mdash;source code that is being developed by programmers around the world. The official version of the code is kept on the CVS server. KDE developers can download the portions of code that they are interested in, make changes, and upload the modified code to the server using the <literal>cvs</literal> utility.</para>
<para>CVS is released under the GNU General Public License, the same license used by KDE applications. Information about CVS is available from <ulink url="http://www.cyclic.com/">http://www.cyclic.com/</ulink>. You may also find links to source and binary distributions there, although the CVS client, <literal>cvs</literal>, is included in popular Linux distributions and may already be on your system.</para>
<para>The features offered by CVS are appropriate for distributed computing. When users wish to make changes to files, the system saves only the changes the user has made rather than replacing the original file. Every change to a file increments its version number. This means that changes can be reversed. It also means that a virtual snapshot of the source code can be saved with minimal effort; CVS needs to keep a record only of the current version numbers for the files included in the snapshot. The snapshot can then be accessed by reverting all the files to their recorded version numbers. CVS can also maintain more than one development <quote>branch</quote> using this versioning system so that multiple versions of a piece of software can be developed in parallel.</para>
<para>Because it makes the process of distributed development simpler, CVS is used by many free software projects other than KDE. The list includes GIMP, Mozilla, XEmacs, Python, and DES Cracker.<indexterm><primary>CVS</primary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary></indexterm></para>
<section id="ch17lev2sec1">
<title>The Role of CVS in the KDE Project</title>
<para>The <indexterm><primary>CVS</primary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary></indexterm>core KDE code is kept in CVS (note that the term <quote>CVS</quote> is used colloquially to refer to the source-code repository as well as the software used to maintain it). This includes the KDE libraries and applications distributed with KDE. Also in CVS are KOffice, an office suite, KLyX, a GUI for the LaTeX typesetting system, and applications being developed for future versions of KDE.</para>
<para>The KDE CVS is also used to maintain two KDE Web sites, <ulink url="http://www.kde.org">http://www.kde.org</ulink>, and <ulink url="http://developer.kde.org">http://developer.kde.org</ulink>. Keeping the Web site in CVS allows developers to add and update documentation. Having many maintainers means that the Web site can be kept larger and more up-to-date.</para>
<para>This same philosophy applies to the source code (indeed, the primary function of CVS is to maintain software). If you have many programmers downloading, examining, improving, and debugging the most current source, the code improves and everyone benefits. This may lead to some duplicated effort or occasional source-code conflicts because more than one developer may have a piece of code checked out at one time. Experience has shown that these small problems associated with having many developers are more than made up for by the large volume of high-quality code that is produced.<indexterm><primary>CVS</primary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary></indexterm></para>
</section>
</section>
<section id="ch17lev1sec2">
<title>CVS Organization</title>
<para>CVS has two important organizational features: modules and branches. Modules divide the repository into categories based on function; a module might contain an application, a library, or even one of the KDE Web sites. Branches divide the repository into categories based on the version allowing for concurrent development of multiple versions.</para>
<section id="ch17lev2sec2">
<title>Module Names</title>
<para>Modules<indexterm><primary>CVS</primary><secondary>modules</secondary><tertiary>names</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>modules</tertiary></indexterm><indexterm><primary>modules</primary><secondary>CVS (Concurrent Version System)</secondary><tertiary>names</tertiary></indexterm> are given names that correspond to same-level nodes in a tree, like subdirectories all residing in the same parent directory. In fact, each module contains files and directories and is stored in a single directory on your local disk by the <literal>cvs</literal> client when it is downloaded. The modules are described in <link linkend="ch17table01">Table 17.1</link>.</para>
<table id="ch17table01" frame="topbot" label="17.1">
<title>Current KDE CVS Modules</title>
<tgroup cols="2" colsep="0" rowsep="0" align="left">
<colspec colname="c1"/>
<colspec colname="c2"/>
<thead valign="top">
<row rowsep="1">
<entry><emphasis>Module Name</emphasis></entry>
<entry><emphasis>Description</emphasis></entry></row>
</thead>
<tbody valign="top">
<row>
<entry>kde-common<indexterm><primary>kde-common module (CVS)</primary></indexterm></entry>
<entry>Support files needed by most other modules.</entry></row>
<row>
<entry>kdesupport<indexterm><primary>kdesupport module (CVS)</primary></indexterm></entry>
<entry>Libraries not created as part of KDE but needed to run it.</entry></row>
<row>
<entry>kdelibs<indexterm><primary>kdelibs module (CVS)</primary></indexterm></entry>
<entry>The KDE class libraries.</entry></row>
<row>
<entry>kdebase<indexterm><primary>kdebase module (CVS)</primary></indexterm></entry>
<entry>Applications that form the desktop: kfm, kpanel, and so on.</entry></row>
<row>
<entry>kdeutils<indexterm><primary>kdeutils module (CVS)</primary></indexterm></entry>
<entry>Utility programs such as KWrite, KCalc, and KFloppy.</entry></row>
<row>
<entry>kde-i18n<indexterm><primary>kde-il8n module (CVS)</primary></indexterm></entry>
<entry>Translations of KDE applications.</entry></row>
<row>
<entry>kdeadmin<indexterm><primary>kdeadmin module (CVS)</primary></indexterm></entry>
<entry>System-administration utilities.</entry></row>
<row>
<entry>kdegraphics<indexterm><primary>kdegraphics module (CVS)</primary></indexterm></entry>
<entry>File-viewing applications for ostscript, dvi, JPEG, and so on.<indexterm><primary>CVS</primary><secondary>modules</secondary><tertiary>names</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>modules</tertiary></indexterm><indexterm><primary>modules</primary><secondary>CVS (Concurrent Version System)</secondary><tertiary>names</tertiary></indexterm></entry></row>
<row>
<entry>kdemultimedia<indexterm><primary>kdemultimedia module (CVS)</primary></indexterm></entry>
<entry>Audio applications.</entry></row>
<row>
<entry>kdenetwork<indexterm><primary>kdenetwork module (CVS)</primary></indexterm></entry>
<entry>Internet-related utilities.</entry></row>
<row>
<entry>kdebindings<indexterm><primary>kdebindings module (CVS)</primary></indexterm></entry>
<entry>Alpha code for Python-KDE bindings.</entry></row>
<row>
<entry>kdegames<indexterm><primary>kdegames module (CVS)</primary></indexterm></entry>
<entry>Games for KDE, such as kasteroids, kpat, and so on.</entry></row>
<row>
<entry>kdenonbeta<indexterm><primary>kdenonbeta module (CVS)</primary></indexterm></entry>
<entry>Projects not yet ready for inclusion in KDE.</entry></row>
<row>
<entry>kdesdk<indexterm><primary>kdesdk module (CVS)</primary></indexterm></entry>
<entry>The KDE Software Developer's Kit.</entry></row>
<row>
<entry>kdetoys<indexterm><primary>kdetoys module (CVS)</primary></indexterm></entry>
<entry>Fun KDE programs such as kmoon, which graphically indicates the phase of the moon.</entry></row>
<row>
<entry>kdevelop<indexterm><primary>kdevelop module (CVS)</primary></indexterm></entry>
<entry>An integrated development environment (IDE) for KDE.</entry></row>
<row>
<entry>kfte<indexterm><primary>kfte module (CVS)</primary></indexterm></entry>
<entry>A programmer's editor.</entry></row>
<row>
<entry>klyx<indexterm><primary>klyx module (CVS)</primary></indexterm></entry>
<entry>A system for editing, viewing, and typesetting documents using LaTeX.</entry></row>
<row>
<entry>kmusic<indexterm><primary>kmusic module (CVS)</primary></indexterm></entry>
<entry>Music composition tools.</entry></row>
<row>
<entry>koffice<indexterm><primary>koffice module (CVS)</primary></indexterm></entry>
<entry>An office suit including kword, kspread, and kimageshop.</entry></row>
<row>
<entry>korganizer<indexterm><primary>korganizer module (CVS)</primary></indexterm></entry>
<entry>A personal information manager.<indexterm><primary>CVS</primary><secondary>modules</secondary><tertiary>names</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>modules</tertiary></indexterm><indexterm><primary>modules</primary><secondary>CVS (Concurrent Version System)</secondary><tertiary>names</tertiary></indexterm></entry></row>
</tbody>
</tgroup>
</table>
</section>
<section id="ch17lev2sec3">
<title>Branches</title>
<para>Whenever<indexterm><primary>CVS</primary><secondary>branches</secondary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>branches</tertiary></indexterm><indexterm><primary>branches (CVS)</primary></indexterm> a new version of KDE is released, a CVS branch is marked with a text string identifier. These identifiers are used to keep track of multiple versions of KDE at one time. For example, KDE 2.0 could be developed while bug fixes and feature additions were made to KDE 1.0. The releases KDE 1.1, 1.1.1, and 1.1.2 were based on the KDE 1.1 branch (called <literal>KDE_1_1_BRANCH</literal>) while KDE 2.0 continued in the main CVS branch (called <literal>HEAD</literal>).</para>
</section>
</section>
<section id="ch17lev1sec3">
<title>Accessing Source Code in CVS</title>
<para>You <indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary></indexterm><indexterm><primary>code</primary><see>source code</see></indexterm>may access source code in CVS by downloading it via FTP (snapshots), via the WWW, or by using the <literal>cvsup</literal> or <literal>cvs</literal> utilities.</para>
<section id="ch17lev2sec4">
<title>Snapshots</title>
<para>The <indexterm><primary>CVS</primary><secondary>snapshots</secondary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>snapshots</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>snapshots</tertiary></indexterm><indexterm><primary>snapshots</primary></indexterm><indexterm><primary>FTP</primary><secondary>snapshots</secondary></indexterm><indexterm><primary>protocols</primary><secondary>FTP</secondary><tertiary>snapshots</tertiary></indexterm>easiest way to get code out of CVS is to download the snapshots from <ulink url="ftp://ftp.kde.org">ftp://ftp.kde.org</ulink> or one of its mirrors. The snapshots are in the directory /pub/kde/unstable/CVS/snapshots. One file in this directory contains all the source code from one CVS module. Files are named in the following way:</para>
<informalexample>
<programlisting linenumbering="unnumbered">
kdelibs990925.tar.bz2
</programlisting>
</informalexample>
<para>That is, the filename consists of the name of the module followed by the date the snapshot was created, in YYYYMMDD format. New snapshots are created every day for the following modules:</para>
<itemizedlist mark="bullet" spacing="compact">
<listitem><para>kdesupport</para></listitem>
<listitem><para>kdelibs</para></listitem>
<listitem><para>kdebase</para></listitem>
<listitem><para>kdeutils</para></listitem>
<listitem><para>kdenetwork</para></listitem>
<listitem><para>kde-i18n</para></listitem>
<listitem><para>kdeadmin</para></listitem>
<listitem><para>kdegames</para></listitem>
<listitem><para>kdegraphics</para></listitem>
<listitem><para>kdemultimedia</para></listitem>
<listitem><para>kdenonbeta</para></listitem>
<listitem><para>kdesdk</para></listitem>
<listitem><para>kdetoys</para></listitem>
<listitem><para>klyx</para></listitem>
<listitem><para>koffice</para></listitem>
<listitem><para>korganizer<indexterm><primary>CVS</primary><secondary>snapshots</secondary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>snapshots</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>snapshots</tertiary></indexterm><indexterm><primary>snapshots</primary></indexterm><indexterm><primary>FTP</primary><secondary>snapshots</secondary></indexterm><indexterm><primary>protocols</primary><secondary>FTP</secondary><tertiary>snapshots</tertiary></indexterm></para></listitem></itemizedlist>
</section>
<section id="ch17lev2sec5">
<title>The WWW Interface to CVS</title>
<para>Henner<indexterm><primary>CVS</primary><secondary>Web interface</secondary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>Web interface</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>Web interface</tertiary></indexterm><indexterm><primary>Web</primary><secondary>CVS (Concurrent Version System) interface</secondary></indexterm><indexterm><primary>WWW</primary><see>Web</see></indexterm><indexterm><primary>World Wide Web</primary><see>Web</see></indexterm> Zeller maintains a WWW interface to CVS at <ulink url="http://kdecvs.stud.fh-heilbronn.de/cvsweb">http://kdecvs.stud.fh-heilbronn.de/cvsweb</ulink>. The interface allows you to browse through the modules and their subdirectories, download files, view logs for files, and recover old versions of files for any CVS branch. <link linkend="ch17fig01">Figure 17.1</link> shows the WWW interface as viewed by kfm.</para>
</section>
<section id="ch17lev2sec6">
<title>CVSup</title>
<para>CVSup <indexterm><primary>CVS</primary><secondary>cvsup utility</secondary><tertiary>advantages</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvsup utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvsup utility</tertiary></indexterm><indexterm><primary>cvsup utility</primary><secondary>advantages</secondary></indexterm><indexterm><primary>utilities</primary><secondary>cvsup</secondary><tertiary>advantages</tertiary></indexterm>is a utility for keeping a local copy of a CVS source code repository. It is faster than getting snapshots because it downloads only the differences between your copy and the copy in CVS. Another advantage is that it can be used without having a CVS account. If you want to keep up-to-date with CVS and you are not responsible for maintaining code in it, CVSup is the best choice.</para>
<figure label="17.1" id="ch17fig01">
<title>The World Wide Web interface to the KDE CVS Repository.</title>
<mediaobject>
<imageobject>
<imagedata fileref="graphics/17fig01.gif" format="GIF"/></imageobject>
</mediaobject>
</figure>
</section>
<section id="ch17lev2sec7">
<title>CVS Accounts</title>
<para>CVS<indexterm><primary>CVS</primary><secondary>accounts</secondary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>accounts</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>CVS accounts</tertiary></indexterm><indexterm><primary>accounts</primary><secondary>CVS (Concurrent Version System) accounts</secondary></indexterm> accounts, which enable you to read and write to CVS, are granted to developers who are maintaining code in the KDE CVS. Currently, there are about 260 such account holders. If you are maintaining code, you should consult the KDE Developer's HOWTO at <ulink url="http://developer.kde.org/documentation/tutorials/howto/develHOWTO.html">http://developer.kde.org/documentation/tutorials/howto/develHOWTO.html</ulink> for information on obtaining a CVS account.</para>
<note role="tip">
<para>You don't need a CVS account to contribute to KDE. Software maintainers always welcome patches for bug fixes and feature implementation.</para>
</note>
</section>
</section>
<section id="ch17lev1sec4">
<title>Installing and Using CVSup</title>
<para>You <indexterm><primary>CVS</primary><secondary>cvsup utility</secondary><tertiary>configuring</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvsup utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvsup utility</tertiary></indexterm><indexterm><primary>cvsup utility</primary><secondary>configuring</secondary></indexterm><indexterm><primary>utilities</primary><secondary>cvsup</secondary><tertiary>configuring</tertiary></indexterm><indexterm><primary>configuring</primary><secondary>cvsup utility</secondary></indexterm>can find the CVSup client for your system at <ulink url="ftp://postgresql.org/pub/CVSup">ftp://postgresql.org/pub/CVSup</ulink> and general information at <ulink url="http://www.cs.wustl.edu/!nanbor/CVSUP/">http://www.cs.wustl.edu/!nanbor/CVSUP/</ulink>. Instructions detailing how to configure CVSup to access the KDE CVS are available at <ulink url="http://www.kde.org/cvsup.html">http://www.kde.org/cvsup.html</ulink>.</para>
<para>You will need to create a text file containing configuration information for CVSup. Listing 18.1 shows a sample.</para>
<example role="codelisting" label="17.1" id="ch17list01">
<title>CVSup Configuration File</title>
<programlisting linenumbering="numbered">
1: *default host=cvsup.kde.org
2: *default base=/usr/src/kde
3: *default prefix=/usr/src/kde
4: *default release=cvs
5: *default delete
6: *default compress
7: *default tag=.
8: *default use-rel-suffix
9: kdeall
</programlisting>
</example>
<para>The <literal>host</literal> entry tells the name of the <literal>cvsup</literal> server to connect to. The <literal>base</literal> directory is where <literal>cvsup</literal> will place its bookkeeping files. <literal>prefix</literal> specifies the directory under which to place all files retrieved from the CVS. <literal>prefix</literal> is usually the same as base. <literal>release</literal> is a relic from a CVSup ancestor, <literal>sup</literal>. It should always be set to <literal>cvs</literal>. The <literal>delete</literal> keyword gives <literal>cvsup</literal> your permission to delete files in your copy of the CVS repository that are no longer needed (for example, the maintainer of that package has removed the file from CVS). <literal>compress</literal> instructs the <literal>cvsup</literal> server to compress the information it sends to you; this generally speeds the transfer. The <literal>tag</literal> is the name of the CVS branch to get. The <literal>.</literal> refers to the default branch (which is HEAD). The <literal>use-rel-suffix</literal> keyword tells <literal>cvsup</literal> to append a suffix formed from the release and tag to the filename of an index of file that it maintains. This helps you keep track of copies of multiple CVS branches.</para>
<para>Basic usage of <literal>cvsup</literal> looks like the following:</para>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">cvsup</emphasis> <emphasis role="bolditalic">configfile</emphasis>
</programlisting>
</informalexample>
<para>where <emphasis><literal>configfile</literal></emphasis> is the path to the configuration file discussed in the previous paragraph. A full description of <literal>cvsup</literal> options can be found in the <literal>cvsup</literal> man page; type <emphasis role="strong"><literal>man cvsup</literal>.</emphasis><indexterm><primary>CVS</primary><secondary>cvsup utility</secondary><tertiary>configuring</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvsup utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvsup utility</tertiary></indexterm><indexterm><primary>cvsup utility</primary><secondary>configuring</secondary></indexterm><indexterm><primary>utilities</primary><secondary>cvsup</secondary><tertiary>configuring</tertiary></indexterm><indexterm><primary>configuring</primary><secondary>cvsup utility</secondary></indexterm></para>
</section>
<section id="ch17lev1sec5">
<title>Installing and Using cvs</title>
<para>The<indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>configuring</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>configuring</secondary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>configuring</tertiary></indexterm><indexterm><primary>configuring</primary><secondary>cvs utility</secondary></indexterm> <literal>cvs</literal> utility may already be installed on your system (you can check by typing <emphasis role="strong"><literal>cvs</literal></emphasis>). If not, you can download a source or binary package from <ulink url="http://www.cyclic.com">http://www.cyclic.com</ulink>.</para>
<para>Before using <literal>cvs,</literal> you need to set the environment variable <literal>CVSROOT</literal> to point to the KDE CVS server. If your CVS login name is <literal>janedeveloper</literal>, for example, you should set <literal>CVSROOT</literal> to</para>
<informalexample>
<programlisting linenumbering="unnumbered">
:pserver:janedeveloper@cvs.kde.org:/home/kde
</programlisting>
</informalexample>
<section id="ch17lev2sec8">
<title>Frequently Used Commands</title>
<para>The<indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>command-line optoins</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>commands</secondary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>commands</primary><secondary>cvs</secondary></indexterm> <literal>cvs</literal> utility is flexible and thus offers many options. Common operations performed with <literal>cvs</literal> are listed in the following paragraph. The option<indexterm><primary>z6 option (cvs command)</primary></indexterm> <literal>-z6</literal> is included in all the commands. It enables compression of the information to be transferred between the server and the client. This can speed up transfers, especially over slow connections.</para>
<para>In the following list, <emphasis><literal>modulename</literal></emphasis> refers to one of the module names listed earlier in this chapter (kdesupport, kdelibs, and so on) and <emphasis><literal>BRANCH_NAME</literal></emphasis> refers to one of the CVS branches (for example, HEAD). Unless otherwise stated, the option <literal>-r</literal> <emphasis><literal>BRANCH_NAME</literal></emphasis> is optional. If it is omitted, the default branch will be used. Within each module may be several applications or libraries, with one stored per subdirectory. In the following, <emphasis>appname</emphasis> refers to one of these subdirectory names. For example, the module kdeutils contains the subdirectories kjots, kedit, and kwrite (among others) which contain the respective applications.</para>
<para>Unless otherwise noted, all commands given in this section assume that you want to use the current working directory for your local copy of CVS source code.<indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>commands</secondary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>commands</primary><secondary>cvs</secondary></indexterm></para>
<section id="ch17lev3sec1">
<title>Check Out a Module</title>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">cvs -z6 co -r</emphasis> <emphasis role="bolditalic">BRANCH_NAME</emphasis> <emphasis role="strong">modulename</emphasis>
</programlisting>
</informalexample>
<para>copies<indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>commands</secondary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>commands</primary><secondary>cvs</secondary></indexterm><indexterm><primary>CVS</primary><secondary>modules</secondary><tertiary>checking out</tertiary></indexterm><indexterm><primary>modules</primary><secondary>CVS (Concurrent Version System)</secondary><tertiary>checking out</tertiary></indexterm> <emphasis><literal>modulename</literal></emphasis> to a local subdirectory of the same name (which <literal>cvs</literal> creates, if necessary).</para>
</section>
<section id="ch17lev3sec2">
<title>Commit Changes</title>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">cvs -z6 commit</emphasis>
</programlisting>
</informalexample>
<para>updates<indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>commands</secondary><tertiary>commit</tertiary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>commands</primary><secondary>cvs</secondary><tertiary>commit</tertiary></indexterm><indexterm><primary>CVS</primary><secondary>changes, committing</secondary></indexterm> t<indexterm><primary>commit option (cvs command)</primary></indexterm>he CVS repository so that it matches your local code. In this case, the code in the current directory and its subdirectories will be updated. To commit a specific file or subdirectory, use</para>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">cvs -z6 commit</emphasis> <emphasis role="bolditalic">filename</emphasis>
</programlisting>
</informalexample>
<para>or</para>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">cvs -z6 commit</emphasis> <emphasis role="bolditalic">subdirectory</emphasis>
</programlisting>
</informalexample>
<para>You should be sure that your code compiles and runs before committing it to CVS. This way, other developers will always have a running version of KDE to work with.<indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>commands</secondary><tertiary>commit</tertiary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>commands</primary><secondary>cvs</secondary><tertiary>commit</tertiary></indexterm><indexterm><primary>CVS</primary><secondary>changes, committing</secondary></indexterm></para>
</section>
<section id="ch17lev3sec3">
<title>Update a Previously Checked-Out Module</title>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">cvs -z6 update</emphasis> <emphasis role="bolditalic">modulename</emphasis>
</programlisting>
</informalexample>
<para>or</para>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">cvs -z6 update</emphasis> <emphasis role="bolditalic">modulename/appname</emphasis>
</programlisting>
</informalexample>
<para>updates<indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>commands</secondary><tertiary>update</tertiary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>commands</primary><secondary>cvs</secondary><tertiary>update</tertiary></indexterm><indexterm><primary>CVS</primary><secondary>modules</secondary><tertiary>updating</tertiary></indexterm><indexterm><primary>modules</primary><secondary>CVS (Concurrent Version System)</secondary><tertiary>updating</tertiary></indexterm><indexterm><primary>updating</primary><secondary>modules (CVS)</secondary></indexterm><indexterm><primary>update option (cvs command)</primary></indexterm> your local code to match the CVS. If you use this regularly, you can keep up-to-date with CVS with minimal file-transfer time because only the differences between your local code and the CVS are transferred.</para>
</section>
<section id="ch17lev3sec4">
<title>Check Out a Single Application from Within a Module</title>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">cvs -z6 co -l</emphasis> <emphasis role="bolditalic">modulename</emphasis>
<emphasis role="strong">cvs -z6 co</emphasis> <emphasis role="bolditalic">modulename/appname</emphasis>
<emphasis role="strong">cvs -z6 co -l admin</emphasis>
<emphasis role="strong">cd</emphasis> <emphasis role="bolditalic">modulename</emphasis><emphasis role="strong">; ln -s ../admin</emphasis></programlisting>
</informalexample>
<para>The<indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>commands</secondary><tertiary>-l</tertiary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>commands</primary><secondary>cvs</secondary><tertiary>-l</tertiary></indexterm><indexterm><primary>CVS</primary><secondary>applications</secondary><tertiary>checking out</tertiary></indexterm><indexterm><primary>checking out</primary><secondary>applications (CVS)</secondary></indexterm><indexterm><primary>l option (cvs command)</primary></indexterm> option <literal>-l</literal> tells <literal>cvs</literal> not to recurse the subdirectories. Thus, in the first line, only the module-level <literal>Makefile</literal>, configure script and related files will be copied to the local disk. The second line copies only the subdirectory containing the application we are interested in. The admin module contains more configuration scripts and is used by all other modules. When a module is retrieved in its entirety, the admin directory is included as a subdirectory of the module. Here, it is placed instead at the same level as the module's directory. Therefore, in the last line, we make a symbolic link to admin in the module's directory.</para>
</section>
<section id="ch17lev3sec5">
<title>Add a File</title>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">cvs add mynewcode.cpp</emphasis>
<emphasis role="strong">cvs -z6 commit</emphasis>
</programlisting>
</informalexample>
<para>adds <indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>commands</secondary><tertiary>add</tertiary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>commands</primary><secondary>cvs</secondary><tertiary>add</tertiary></indexterm><indexterm><primary>CVS</primary><secondary>files</secondary><tertiary>adding</tertiary></indexterm><indexterm><primary>files</primary><secondary>CVS (Concurrent Version System)</secondary><tertiary>adding</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>files</tertiary></indexterm><indexterm><primary>add option (cvs command)</primary></indexterm>the file mynewcode.cpp to CVS. Simply creating the file and running a <literal>commit</literal> is not enough! Doing this will update all the files you have changed, but it will not include new files. This means that, typically, the application will be broken in CVS. Be sure to <literal>add</literal> your new files. (Don't use <literal>-z6</literal> when adding, because <literal>add</literal> makes only local changes; it marks the file as <quote>to be added.</quote>)</para>
</section>
<section id="ch17lev3sec6">
<title>Remove a File</title>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">rm oldcode.cpp</emphasis>
<emphasis role="strong">cvs remove oldcode.cpp</emphasis>
<emphasis role="strong">cvs -z6 commit</emphasis>
</programlisting>
</informalexample>
<para>removes <indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>commands</secondary><tertiary>remove</tertiary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>commands</primary><secondary>cvs</secondary><tertiary>remove</tertiary></indexterm><indexterm><primary>CVS</primary><secondary>files</secondary><tertiary>removing</tertiary></indexterm><indexterm><primary>files</primary><secondary>CVS (Concurrent Version System)</secondary><tertiary>removing</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>files</tertiary></indexterm><indexterm><primary>deleting</primary><secondary>CVS (Concurrent Version System) files</secondary></indexterm><indexterm><primary>remove option (cvs command)</primary></indexterm>the file oldcode.cpp from the current directory and then from CVS.</para>
</section>
<section id="ch17lev3sec7">
<title>Add a Directory</title>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">cvs add newdir</emphasis>
<emphasis role="strong">cvs add newdir/newsource.cpp</emphasis>
<emphasis role="strong">cvs -z6 commit</emphasis>
</programlisting>
</informalexample>
<para>adds<indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>commands</secondary><tertiary>add</tertiary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>commands</primary><secondary>cvs</secondary><tertiary>add</tertiary></indexterm><indexterm><primary>CVS</primary><secondary>directories</secondary><tertiary>adding</tertiary></indexterm><indexterm><primary>directories</primary><secondary>CVS (Concurrent Version System)</secondary><tertiary>adding</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>directories</tertiary></indexterm><indexterm><primary>add option (cvs command)</primary></indexterm> the directory newdir and its source file newsource.cpp to CVS. Note that you need to do <literal>cvs add newdir/newsource.cpp</literal> for each source file before <literal>commit</literal>ting. You cannot add an empty directory.</para>
</section>
<section id="ch17lev3sec8">
<title>Remove a Directory</title>
<para>First,<indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>commands</secondary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>commands</primary><secondary>cvs</secondary></indexterm><indexterm><primary>CVS</primary><secondary>directories</secondary><tertiary>removing</tertiary></indexterm><indexterm><primary>directories</primary><secondary>CVS (Concurrent Version System)</secondary><tertiary>removing</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>directories</tertiary></indexterm><indexterm><primary>deleting</primary><secondary>CVS (Concurrent Version System) directories</secondary></indexterm> remove all files in the directory from CVS as described previously in <quote>Remove a File.</quote> Then,</para>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">cd ..</emphasis>
<emphasis role="strong">cvs -P update</emphasis>
</programlisting>
</informalexample>
<para>removes the directory from CVS and from your local disk.</para>
</section>
<section id="ch17lev3sec9">
<title>List CVS modules</title>
<para>This <indexterm><primary>CVS</primary><secondary>cvs utility</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>version control</primary><secondary>CVS</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>source code</primary><secondary>accessing in CVS (Concurrent Version System)</secondary><tertiary>cvs utility</tertiary></indexterm><indexterm><primary>cvs utility</primary><secondary>commands</secondary></indexterm><indexterm><primary>utilities</primary><secondary>cvs</secondary><tertiary>commands</tertiary></indexterm><indexterm><primary>commands</primary><secondary>cvs</secondary></indexterm><indexterm><primary>CVS</primary><secondary>modules</secondary><tertiary>listing</tertiary></indexterm><indexterm><primary>modules</primary><secondary>CVS (Concurrent Version System)</secondary><tertiary>listing</tertiary></indexterm><indexterm><primary>listing</primary><secondary>CVS (Concurrent Version System) modules</secondary></indexterm>cannot be done directly with <literal>cvs</literal>, but you can get a good approximation of a list of all the modules by typing</para>
<informalexample>
<programlisting linenumbering="unnumbered">
<emphasis role="strong">cvs -z6 co -c</emphasis>
</programlisting>
</informalexample>
</section>
</section>
</section>
<section id="ch17lev1sec6">
<title>Summary</title>
<para>KDE makes the most current&mdash;the <quote>bleeding edge</quote>&mdash;source code available for anyone to download and test. This is good for the project because exciting new code can entice developers into coding for the project, and the sooner code is available for testing, the sooner bugs can be reported and fixed and feature requests can be made.</para>
<para>You can access the CVS source code via the WWW, <literal>cvsup</literal>, <literal>cvs</literal>, or by downloading snapshots from an FTP site. Only <literal>cvs</literal> requires an account because this method can also allow you to write to CVS. Each method has its advantages: the WWW interface is convenient for browsing files and logs; <literal>cvsup</literal> lets you stay up-to-date with minimal download time; <literal>cvs</literal> also lets you stay up-to-date with minimal download time, but lets you make changes to the CVS; and the snapshots offer a convenient method for occasionally downloading the development version of KDE.</para>
</section>
</chapter>
