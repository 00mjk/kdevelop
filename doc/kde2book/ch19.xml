<chapter label="19" role="chapter" id="ch19">
<title>Licensing Issues</title>
<para><emphasis>by Kurt Gramroth</emphasis></para>
<highlights>
<itemizedlist mark="bullet" spacing="compact">
<title>In This Chapter</title>
<listitem><para><emphasis role="strong"><link linkend="ch19lev1sec1">What Are the <quote>Issues?</quote></link></emphasis></para></listitem>
<listitem><para><emphasis role="strong"><link linkend="ch19lev1sec2">License Usage by KDE</link></emphasis></para></listitem>
<listitem><para><emphasis role="strong"><link linkend="ch19lev1sec3">The License Usage by Qt</link></emphasis></para></listitem>
<listitem><para><emphasis role="strong"><link linkend="ch19lev1sec4">The KDE/Qt License History</link></emphasis></para></listitem>
</itemizedlist>
</highlights>
<para>Perhaps <indexterm><primary>licenses</primary></indexterm><indexterm><primary>legal issues</primary><see>licenses</see></indexterm>the most common (and most commonly misunderstood) issue surrounding the KDE project is the licensing issue. The combination of licenses between KDE and Qt make the issue less than obvious, especially if you are using KDE/Qt to develop a closed-source or commercial application. These issues, for all their complexity, are manageable. This chapter will arm you with the information you need to sort through how the KDE licensing will affect your own software.</para>
<para>This chapter starts by giving a quick overview of the licenses and how they interact. Then it describes the individual KDE and Qt licenses in a little more detail. Finally, it provides a short history of the Qt licenses to give the licensing discussion (and the <quote>flame wars</quote> that invariably follow) a little context. The text of several of the licenses discussed (GPL, LGPL, QPL) may be found in <link linkend="ap-a">Appendix A, <quote>KDE-Related Licenses.</quote></link><indexterm><primary>licenses</primary></indexterm></para>
<section id="ch19lev1sec1">
<title>What Are the <quote>Issues?</quote></title>
<para>In some cases the <indexterm><primary>licenses</primary></indexterm>KDE project uses a different license than the one that Trolltech has chosen for Qt. These licenses have different goals and purposes and apply to software projects in different ways. As a quick example, you may freely use the KDE libraries in any sort of project, free or not. However, if your project is not free, you must pay for a Qt license.</para>
<section id="ch19lev2sec1">
<title>What Licenses Are Involved?</title>
<para>The <indexterm><primary>licenses</primary></indexterm>KDE project does not, as a policy, require code to conform to any specific license to be included in the base packages. However, the code is required to have a license and the license must be Open Source. That is the official policy.</para>
<para>The reality of the situation is that nearly all code in the KDE libraries is covered under the Library GNU Public License (LGPL) as defined by the Free Software Foundation (FSF). Nearly all code in the KDE applications is licensed under the GNU Public License (GPL), also defined by the FSF. Those bits of code that are not licensed under the LGPL or GPL (like the DCOP system, KWin, and Kicker) are usually licensed under a <quote>public domain</quote> style license (for example, BSD, X11, or MIT), which states that you may use the code however you like as long as you don't sue the author. The code that falls under those licenses is invariably that which we encourage developers to incorporate into commercial products (to make acceptance more universal, for instance).</para>
<para>The Qt library license varies depending on the version number. All versions prior to 2.0 are covered under the FreeQt license. All versions including and after 2.0 are covered under the Q Public License (QPL). Versions of Qt including and beyond 2.2 may also be covered under the GPL. To be a little more precise, this only refers to the <quote>free</quote> version. In all cases, commercial closed-source development requires a Qt <quote>Commercial</quote> license (explained later in the section <link linkend="ch19lev2sec6"><quote>The FreeQt License</quote></link>).<indexterm><primary>licenses</primary></indexterm></para>
</section>
<section id="ch19lev2sec2">
<title>How Do the Licenses Affect Me?</title>
<para>The<indexterm><primary>licenses</primary><secondary>importance to projects</secondary></indexterm> interaction between the KDE and Qt licenses and your own project varies based on your project's licensing structure. This section lists various common setups. Find the one that matches your situation and you will see how the licenses affect you.</para>
<itemizedlist mark="none" spacing="compact">
<listitem><para><quote><emphasis>My project is completely covered by an Open Source license.</emphasis></quote></para></listitem>
<listitem><para>This is the easiest (and most common) situation. In your case, you may use the KDE and Qt libraries to develop your application without having to pay any money to anybody. There are also no restrictions as to how you use the KDE libraries. Qt restrictions may apply, dependent on which version of Qt you are using (Qt 1.x or Qt 2.x).</para></listitem>
<listitem><para><quote><emphasis>My project is completely closed source.</emphasis></quote></para></listitem>
<listitem><para>This is the second easiest (but much less common) situation. You may use and link to the KDE libraries but may not modify them. You must also contact Trolltech for a Qt Commercial license, and you will have to pay for that.</para></listitem>
<listitem><para><quote><emphasis>My project is covered by an Open Source license, but I plan to sell it commercially.</emphasis></quote></para></listitem>
<listitem><para>In some ways, this is similar to the situation of the Linux distributors in that they take Open Source projects and package them up commercially. You may use and modify the KDE libraries in the standard way. You may also use the Qt license without having to buy the Commercial license.<indexterm><primary>licenses</primary><secondary>importance to projects</secondary></indexterm></para></listitem>
<listitem><para><quote><emphasis>My project is not Open Source, but I give away the executables without charging for them.</emphasis></quote></para></listitem>
<listitem><para>This is similar to what Microsoft does with Internet Explorer. Unfortunately, just the fact that you give away the result does not make the project free&mdash;and that is what is used to determine the interaction between the KDE and Qt licenses. The end result is identical to the earlier closed-source situation: you may use but not modify the KDE libraries, and you must purchase a Commercial license from Troll Tech for the use of the Qt license.</para></listitem>
<listitem><para><quote><emphasis>My project is for internal use only. My company does not plan to ever release the finished product.</emphasis></quote></para></listitem>
<listitem><para>At first glance, this situation seems ambiguous; it's really not. When the various licenses refer to distribution, they are not just talking about releases to <quote>the outside world,</quote> they are also referring to releases within a closed system (for example, an internal company or division-wide release). Evaluating the licenses in this case is nearly identical to all the other cases examined.</para></listitem>
<listitem><para>Everything hinges on whether or not your company (and boss) allow you to license your project under an Open Source license. If so, then you may treat it like any other Open Source project, regardless of whether or not it is internal. Basically, if any user of your project (in this case, a <quote>user</quote> is another employee of your company) has the right to demand the source, modify it, and redistribute it for free, then you may use Qt like any other GPLed library. If doing so contradicts company policy, then you must contact Trolltech for a Commercial license.<indexterm><primary>licenses</primary><secondary>importance to projects</secondary></indexterm></para></listitem>
</itemizedlist>
</section>
</section>
<section id="ch19lev1sec2">
<title>License Usage by KDE</title>
<para>As mentioned earlier, the KDE project does not mandate any single Open Source license as long as the license is Open Source. By far, the most common license for the KDE libraries is LGPL, and the most common for applications is GPL. Code that we may explicitly want people to incorporate into (possibly closed-source) applications may use other licenses.</para>
<section id="ch19lev2sec3">
<title>Library GNU Public License (LGPL)</title>
<para>The <indexterm><primary>licenses</primary><secondary>LGPL (Library GNU Public License)</secondary></indexterm><indexterm><primary>LGPL (Library GNU Public License)</primary></indexterm><indexterm><primary>Library GNU Public License (LGPL)</primary></indexterm>LGPL was designed by the FSF to ensure that the code, as written by the author, must always remain free. However, the library that the code is contained in may be used and linked by nonfree applications. You may sometimes see this referred to as a <quote>copyleft</quote> license.</para>
<para>Three questions often arise in regard to using libraries: <quote>How may I use the library?</quote>;<quote>May I use individual files from the library?</quote>; and <quote>May I modify the library?</quote><indexterm><primary>licenses</primary><secondary>LGPL (Library GNU Public License)</secondary></indexterm><indexterm><primary>LGPL (Library GNU Public License)</primary></indexterm><indexterm><primary>Library GNU Public License (LGPL)</primary></indexterm></para>
<itemizedlist mark="none" spacing="compact">
<listitem><para><quote><emphasis>How may I use the library?</emphasis></quote></para></listitem>
<listitem><para>There are essentially no restrictions to using and linking to a LGPL library. Your project may be Open Source or closed source&mdash;commercial or not. However, this assumes that you are using the library as is, that you are not modifying it in any way, and that you are linking to it as a shared library. If any of those conditions aren't met, you must refer to the following questions.</para></listitem>
<listitem><para><quote><emphasis>May I use individual files from the library?</emphasis></quote></para></listitem>
<listitem><para>Yes, if you are careful. The files must be included in yet another shared library. You may not compile them directly into your application unless your application is licensed under the GPL. That is to say, all LGPL code that is removed from a library is automatically re-licensed under the GPL. If you insert this file into another shared library, you must ensure that this new library is licensed under the LGPL or GPL. In short, you may not ever insert a LGPL file into a nonfree application or library.</para></listitem>
<listitem><para><quote><emphasis>May I modify the library?</emphasis></quote></para></listitem>
<listitem><para>Yes, as long as you redistribute your modified library under the LGPL or GPL. If you make modifications but do not want to redistribute the entire library, or if you want to use a different license, you should treat your modifications as individual files and refer to the previous question.<indexterm><primary>licenses</primary><secondary>LGPL (Library GNU Public License)</secondary></indexterm><indexterm><primary>LGPL (Library GNU Public License)</primary></indexterm><indexterm><primary>Library GNU Public License (LGPL)</primary></indexterm></para></listitem>
</itemizedlist>
</section>
<section id="ch19lev2sec4">
<title>The GNU Public License (GPL)</title>
<para>Not <indexterm><primary>licenses</primary><secondary>GPL (GNU Public License)</secondary></indexterm><indexterm><primary>GPL (GNU Public License)</primary></indexterm><indexterm><primary>GNU Public License (GPL)</primary></indexterm>only is the GPL the most popular license for KDE applications, but it is almost surely the most popular Open Source license anywhere. Probably the biggest reason for its popularity is that it is very effective in keeping your code free.</para>
<para>The GPL is another <quote>copyleft</quote> license (the original, in fact). Its design goal is to ensure that your code will not only always be free but furthermore, that it will never be used with a nonfree product. It is in that last clause that it differs from the LGPL. LGPL code, you may remember, does allow restricted usage by nonfree products.</para>
<para>You can use GPL code in a development sense in two major ways. Both options are briefly discussed next.</para>
<itemizedlist mark="none" spacing="compact">
<listitem><para><quote><emphasis>May I use already written GPL code in my application?</emphasis></quote></para></listitem>
<listitem><para>Yes, if your application is licensed under a GPL-compatible license. Note that just being an Open Source license isn't good enough&mdash;it must be <quote>GPL compatible</quote> as defined by the FSF. The FSF Web site has more information on this. In general, though, if your application is GPL, you shouldn't have problems including other GPL code (but see <link linkend="ch19lev2sec5"><quote>The GPL Versus Qt War</quote></link> section that follows).</para></listitem>
<listitem><para><quote><emphasis>May I use already written GPL code in my library?</emphasis></quote></para></listitem>
<listitem><para>Yes, if the library is GPL. If the library is LGPL, you must re-license it under the GPL or you may not include the GPL file. Note that if your library is GPL, it may not be used by nonfree applications.</para></listitem>
<listitem><para><quote><emphasis>May I modify GPL code?</emphasis></quote></para></listitem>
<listitem><para>Yes. If you intend to redistribute this code in another application or library, see the previous questions for help. If you redistribute the code in its own application, no problems exist at all.<indexterm><primary>licenses</primary><secondary>GPL (GNU Public License)</secondary></indexterm><indexterm><primary>GPL (GNU Public License)</primary></indexterm><indexterm><primary>GNU Public License (GPL)</primary></indexterm></para></listitem></itemizedlist>
</section>
<section id="ch19lev2sec5">
<title>The GPL Versus Qt <quote>War</quote></title>
<para>If<indexterm><primary>licenses</primary><secondary>GPL (GNU Public License)</secondary></indexterm><indexterm><primary>GPL (GNU Public License)</primary></indexterm><indexterm><primary>GNU Public License (GPL)</primary></indexterm> you have followed the KDE Project for any length of time, you have likely encountered <quote>The GPL is not compatible with Qt</quote> threads. The issues surrounding this are unfortunately quite ambiguous and highly open to interpretation. There has never been a court case involving the GPL, so all opinions have no solid legal basis. The argument is slightly different based on what version of Qt is involved. Specifically, the arguments have largely gone away with the release of Qt 2.2.</para>
<para>Qt 1.45 and earlier versions were covered under the FreeQt license. The FreeQt license was not an Open Source license. On one point, the GPL is quite clear: you may not mix GPL and nonfree code. That meant that the KDE project could not mix Qt code inside of the KDE libraries. Because the FreeQt license prohibited redistributing individual files from Qt, this was never a problem.</para>
<para>However, some free software advocates claimed that you could not link GPL code with nonfree libraries. They insisted that because KDE applications were GPL, they were in violation by linking with the nonfree Qt library. The Debian project refused to ship KDE with its distribution as a result. The KDE project has always maintained that those advocates have misinterpreted the GPL.</para>
<para>Qt 2.0 and Qt 2.1 are covered by the QPL. The QPL is an Open Source license, so it was expected that the problems would go away. Unfortunately, the FSF has indicated that although the QPL is Open Source, it doesn't consider it to be <quote>GPL Compatible.</quote> The KDE project insists that it is.</para>
<para>This all became a moot point with the release of Qt 2.2. This and later versions of the free Qt are covered under a <quote>dual</quote> license. The author has a choice between using it as if it was covered under the QPL or under the GPL. This last clause was very important. All libraries and applications in KDE are compatible with the GPL. Therefore, when Qt is also covered under the GPL, all possible legal ambiguity drops away. From this point, all objections by the Free Software Foundation and the Debian Project essentially just went away.</para>
<para>Here are the standard questions:<indexterm><primary>licenses</primary><secondary>GPL (GNU Public License)</secondary></indexterm><indexterm><primary>GPL (GNU Public License)</primary></indexterm><indexterm><primary>GNU Public License (GPL)</primary></indexterm></para>
<itemizedlist mark="none" spacing="compact">
<listitem><para><quote><emphasis>Which license for Qt should I use?</emphasis></quote></para></listitem>
<listitem><para>It depends on what license you are using for your application. If you are using the GPL, then you will choose to license Qt under the GPL as well. If you are using Artistic, then you will want to choose the QPL (the Artistic license is not compatible with the GPL). If you are using BSD or MIT or similar, then it's up to you. As always, if your application is closed source, you must still purchase a Commercial license.</para></listitem>
<listitem><para><quote><emphasis>May I use third-party GPL code in my application?</emphasis></quote></para></listitem>
<listitem><para>Absolutely. There was some legal ambiguity with regards to this in the previous versions of Qt, but all such ambiguity is now gone.<indexterm><primary>licenses</primary><secondary>GPL (GNU Public License)</secondary></indexterm><indexterm><primary>GPL (GNU Public License)</primary></indexterm><indexterm><primary>GNU Public License (GPL)</primary></indexterm></para></listitem>
</itemizedlist>
<note role="normal">
<para>This is a good time to mention that you should probably ask the author for permission even if there is no question on licenses. Asking<indexterm><primary>permissions</primary></indexterm> permission is a common courtesy that Open Source developers usually grant each other. Legally, you may use or even distribute modified versions without permission, but it's considered a hostile act and it's almost never worth the grief that results from doing it.</para>
</note>
</section>
</section>
<section id="ch19lev1sec3">
<title>The License Usage by Qt</title>
<para>The license used by Qt varies by version. The FreeQt license (used by Qt 1.45 and earlier) was not Open Source. The Q Public License (used by Qt 2.0 and later) is. KDE 1.1.2 and earlier is based on Qt 1.45, and KDE 2.0 is based on Qt 2.1.</para>
<section id="ch19lev2sec6">
<title>The FreeQt License</title>
<para>There<indexterm><primary>licenses</primary><secondary>FreeQt</secondary></indexterm><indexterm><primary>FreeQt license</primary></indexterm><indexterm><primary>Qt</primary><secondary>license</secondary><tertiary>FreeQt</tertiary></indexterm> were actually two versions of the Qt library: a commercial version and a free version. If the recipient's product was closed source (that is, it was distributed under a license that was not a free software license), they were required to purchase the commercial version of Qt. This version restricted further redistribution of either the original source or modified versions of it and thus failed two of the three requirements of Open Source.</para>
<para>The free version of Qt fell under the FreeQt license. This version was available only if the recipient's product was distributed under a free software license. It permitted the redistribution of Qt and access to the source code. However, it did not allow modifications of Qt to be redistributed. That final clause does not satisfy the requirements of the FSF definition and thus, it is not a free software license.</para>
<para>It is interesting to note that even though the FreeQt license prohibited distribution of modified versions, several modified versions were widely distributed with official permission from Trolltech. The most common <quote>alternate</quote> distribution was used by the Korean speaking world in order to use Kanji characters with KDE 1.x even before Unicode support was added. So while technically it was impossible to modify Qt, the reality of the situation was that Trolltech rarely refused patches and was very willing to allow exceptions on a case-by-case basis when needed.<indexterm><primary>licenses</primary><secondary>FreeQt</secondary></indexterm><indexterm><primary>FreeQt license</primary></indexterm><indexterm><primary>Qt</primary><secondary>license</secondary><tertiary>FreeQt</tertiary></indexterm></para>
</section>
<section id="ch19lev2sec7">
<title>The Q Public License (QPL)</title>
<para>The <indexterm><primary>licenses</primary><secondary>QPL (Q Public License)</secondary></indexterm><indexterm><primary>QPL (Q Public License)</primary></indexterm><indexterm><primary>Q Public License (QPL)</primary></indexterm>QPL was introduced with Qt 2.0. It was designed with the help of several Open Source and free software notables to be an official Open Source license. The old FreeQt license already met the redistribution and access to source code requirements of Open Source, and the QPL added the <quote>modification</quote> capability.</para>
<para>The design goal of the QPL was different from the design goals of the GPL and LGPL in that Trolltech wanted to protect the <quote>good name</quote> of the Qt library while still allowing free redistribution and modification of the library. It accomplished this by requiring that all changes to the Qt code must be distributed separately from the code itself. That is, the Qt library must always be <quote>pristine</quote> before your changes are applied to it. This is intended to protect the intellectual property of the Qt name.</para>
<para>The QPL had one final design goal: the patch clause was designed to make sure that all users may use modified versions of Qt, including commercial users. If another Open Source license had been used, then closed-source companies would not have been able to use any changes to Qt. Using patches, Trolltech could ensure that there was always one unique Qt library, not different libraries for different kinds of development.<indexterm><primary>licenses</primary><secondary>QPL (Q Public License)</secondary></indexterm><indexterm><primary>QPL (Q Public License)</primary></indexterm><indexterm><primary>Q Public License (QPL)</primary></indexterm></para>
<para>The method in which you accomplish this varies, based on how you want to redistribute the library. The most common way now is to put the Qt library in a public source repository such as CVS. Because the CVS system stores all changes as incremental <quote>patches,</quote> the original Qt is still there. The KDE project maintains a development version of Qt in its CVS repository in this manner. Since nearly all large Open Source projects use CVS, this means that it is trivial for them to use modified versions of Qt.</para>
<para>If, however, you want to distribute your modified version of Qt in a complete package (for example, a tarball or a Zip file), you will commonly include your changes as patch files. You may have scripts that automatically apply your changes to the library as soon as the user unpacks them, but the original Qt must be available untouched to the user.</para>
<para>The recommended way to distribute a modified Qt is to use a packaging system such as the Red Hat Packaging Manager (.rpm files) or Debian packager (.deb files). Both offer ways to release source with patches applied automatically to an original. This makes distribution of a modified Qt almost no different than distribution of any other part of your project.</para>
<para>Also note that this only applies to source modifications. The binary versions of a modified Qt may be released as-is. That is, the end user doesn't have to worry about any of this. It is only a concern for developers.<indexterm><primary>licenses</primary><secondary>QPL (Q Public License)</secondary></indexterm><indexterm><primary>QPL (Q Public License)</primary></indexterm><indexterm><primary>Q Public License (QPL)</primary></indexterm></para>
</section>
</section>
<section id="ch19lev1sec4">
<title>The KDE/Qt License History</title>
<para>Most <indexterm><primary>licenses</primary><secondary>history of</secondary></indexterm><indexterm><primary>history of KDE/Qt licenses</primary></indexterm>KDE developers were satisfied with the FreeQt license, even though it was not officially free software. This was mostly because KDE could use and distribute Qt at no charge, as well as have access to the source code. Although KDE developers could not directly fix Qt bugs, in practice this never was a problem. The engineers at Trolltech proved to be very responsive to bug reports and feature requests. Put another way, even though the potential for problems existed, none actually happened.</para>
<para>There was a legitimate concern that Trolltech could have changed the license at any time and would have left KDE without a base library to use. In another scenario, another company that did not want to distribute Qt under the FreeQt license could have acquired Trolltech. This would have also severely hampered KDE development.</para>
<para>To alleviate this concern, several top KDE developers met with the Trolltech owners and formed a legally binding foundation that had jurisdiction over the FreeQt license. The foundation has four members on the board&mdash;two from the KDE project and two from Trolltech. They produced an agreement on June 22, 1998 that ensured that Qt would always have a free version.</para>
<para>The legally binding agreement required Trolltech to release a new free version of Qt at least every 12 months. If Trolltech did not do so, the last free version of Qt would automatically be re-licensed under the BSD free software license.</para>
<para>This meant, in effect, that even if a company hostile to KDE bought out Trolltech, a free version of Qt would still be available.<indexterm><primary>licenses</primary><secondary>history of</secondary></indexterm><indexterm><primary>history of KDE/Qt licenses</primary></indexterm></para>
<section id="ch19lev2sec8">
<title>The Genesis of the QPL</title>
<para>The <indexterm><primary>licenses</primary><secondary>history of</secondary></indexterm><indexterm><primary>history of KDE/Qt licenses</primary></indexterm>FreeQt Foundation alleviated many of the Open Source community's fears, but not all of them. There were still two perceived problems with the situation. First, the agreement did not address the problem of distributing modifications of Qt. Second, the agreement did not address what would happen if Trolltech deliberately changed Qt to be unusable to KDE while still releasing a free version. In that latter scenario, Trolltech would not be in default of the agreement. However, it would effectively cripple KDE for at least a few months.</para>
<para>Note that these concerns were not likely to come true. As stated before, the KDE project had never had a problem with not being able to distribute modifications of Qt. The latter case would be a huge inconvenience if it were to happen, but its likelihood is almost nil for at least two reasons. First, the existence of KDE is almost perfect publicity for the Qt library. Trolltech would be essentially shooting itself in the foot by alienating KDE. Second, Qt is a commercial market. If Qt were to drastically change, it's likely that it would affect companies using Qt, and they would not stand for it.</para>
<para>Furthermore, Trolltech had a very close relationship with the KDE Project. For instance, several KDE core developers now work in very key positions in the company. This makes a hostile act against KDE almost impossible. Also, Trolltech has allowed KDE to use Qt classes such as KAction and QDOM (both of which are absolutely essential for KDE 2.0) before they were officially released in Qt itself. All in all, Trolltech and KDE have been a model in how a commercial company and an Open Source project can exist in a mutually beneficial (and almost symbiotic) relationship.</para>
<para>Nevertheless, the people at Trolltech were aware of the opposition they had in the free- software community and moved to correct the matter in a way acceptable to both the free- software community and its own business interests. The result was the Q Public License (QPL), an official Open Source license.</para>
</section>
<section id="ch19lev2sec9">
<title>The Evolution of the QPL</title>
<para>With the release of the QPL, both the KDE Project and Trolltech assumed that all of the license fury would go away. After all, KDE was fully Open Source and now Qt was too. Unfortunately, it was not to be that simple.</para>
<para>The FSF and Debian Project both insisted that even though the QPL was Open Source, it was still incompatible with the GPL. Since nearly all KDE applications were written under the GPL, this meant that all KDE applications were in violation of their own licenses (or so they claimed).</para>
<para>The resulting <quote>flame wars</quote> were never fun and never resolved to anybody's satisfaction. Concepts like <quote>exception clauses</quote> and <quote>implied exceptions</quote> were tossed about frequently, but still there was little agreement. If you wish to see in detail what the issues were, I recommend searching various Linux related Web sites (like <ulink url="http://www.slashdot.org">http://www.slashdot.org</ulink> and <ulink url="http://www.freshmeat.net">http://www.freshmeat.net</ulink>) for references to the QPL and reading the actual arguments presented.</para>
<para>The KDE Project was sure that all KDE packages were fully legal and that the opponents were simply interpreting the legal clauses incorrectly. But working on KDE was a labor of love for most KDE developers and arguing about licenses wasn't even remotely fun. By and large, KDE developers just wanted the entire issue to go away.</para>
<para>Trolltech realized all of this and was in contact with both the FSF and Debian trying to resolve this once and for all. In the end, it came out that the only way to resolve this issue for all parties would be to release Qt under the LGPL or GPL.</para>
<para>With the release of Qt 2.2, Trolltech did just that.<indexterm><primary>licenses</primary><secondary>history of</secondary></indexterm><indexterm><primary>history of KDE/Qt licenses</primary></indexterm></para>
</section>
</section>
<section id="ch19lev1sec5">
<title>Summary</title>
<para>The legal issues surrounding licensing in KDE may not be trivial, but they are manageable. Hopefully, this chapter has given you the information you need to make informed decisions for your own projects.</para>
<para>One important thing to keep in mind: when in doubt, always go straight to the source. Here are some important links that you may find useful.<indexterm><primary>licenses</primary><secondary>online resources</secondary></indexterm><indexterm><primary>Web sites</primary><secondary>licenses</secondary></indexterm></para>
<itemizedlist mark="bullet" spacing="compact">
<listitem><para>The QPL homepage&mdash;<ulink url="http://www.trolltech.com/qpl/">http://www.trolltech.com/qpl/</ulink></para></listitem>
<listitem><para>The FSF page describing several Open Source licenses and the FSF position on each&mdash;<ulink url="http://www.fsf.org/philosophy/license-list.html">http://www.fsf.org/philosophy/license-list.html</ulink></para></listitem>
<listitem><para>The GPL homepage&mdash;<ulink url="http://www.fsf.org/copyleft/gpl.html">http://www.fsf.org/copyleft/gpl.html</ulink></para></listitem>
<listitem><para>The LGPL homepage&mdash;<ulink url="http://www.fsf.org/copyleft/lgpl.html">http://www.fsf.org/copyleft/lgpl.html</ulink></para></listitem>
<listitem><para>The FreeQt Foundation homepage&mdash;<ulink url="http://www.trolltech.com/kde-freeqt/index.html">http://www.trolltech.com/kde-freeqt/index.html</ulink></para></listitem>
<listitem><para>The Open Source Page&mdash;<ulink url="http://www.opensource.org">http://www.opensource.org</ulink></para></listitem>
<listitem><para>License usage in KDE&mdash;<ulink url="http://developer.kde.org/documentation/licensing/licensing.html">http://developer.kde.org/documentation/licensing/licensing.html</ulink></para></listitem>
</itemizedlist>
</section>
</chapter>
