2001-05-10  Bernd Gehrmann  <bernd@physik.hu-berlin.de>

	* Added Python Hello world template
	* Fixed memory leaks
	* Fixed project files in templates to include mainprogram variable
	* Fixed script project to not show . and .. and to go to a source
	  file when it is clicked
	* Implemented printing

2001-05-09  Bernd Gehrmann  <bernd@physik.hu-berlin.de>

	* Implemented proper comparing of file identities:
	  Instead of the file name, now devno/inode are compared.
	  Important for NFS systems, where file names may have
	  a prefix like /tmp_mnt in some occasions
	  This was already implemented in the HEAD branch 
	  before the old one ;-)
	* Implemented KDevCore::gotoFile() as a generic method
	  to "go" to a file. Works for arbitrary mime types.
	* Implemented KDevCore::revertAllFiles()
	* Warning dialogs when modified files are closed or when
	  saved/loaded files were modified outside.
	* Implemented searching html widget

2001-05-08  Bernd Gehrmann  <bernd@physik.hu-berlin.de>

	* Use flex instead of $(LEX)
	* Made function prototypes in tokenizer.l static.
	  Not making them 'static' explicitly makes them
	  'extern' and causes a conflict
	* Removed tokenizer.cpp from cvs, so it gets
	  generated at build time

2001-05-05  Matthias Hoelzer-Kluepfel <mhk@caldera.de>
	
	* prepared the Tip-of-the-Day plugin to make use of the
          KTipDialog class that will soon appear in kdelibs.

2001-05-01  Richard Dale <duke@tipitina.demon.co.uk

        * Removed hard coded java classpaths, and classnames. They are derived
	  from the projectDirectory and mainProgram project attributes.
	* Checked in jdb front end code from Oliver Strutynski. He comments:
	  'I finished work on a first version of JDB Support. It is not at 
          all feature complete (setting breakpoints does not work yet, hangs 
          from time to time) but could serve as a starting point for further
          development. The directory contains a README describing some of the 
          parsing in the jdbcontroller.'

2001-04-29  Sandy Meier  <smeier@kdevelop.org>
	* some changes in appwizard gui (qtdesigner based),
	templates can have a category property now

2001-04-27  Bernd Gehrmann  <bernd@physik.hu-berlin.de>

	* Implemented a generic project part for scripting languages. 
	  It essentially consists of a widget that displays all files 
	  in all subdirectories.
	* Changed the class view to respect the feature set of the used 
	  language. I.e. for example for python the sections with 
	  variables are not displayed, as in python variables are not 
	  declared.
	* Sanitized project loading: The user now chooses the project
	  file in a file dialog, not the directory. The kapp, kpart 
	  and kpartplugin appwizard scripts install a project file now.
	* Replaced the persistence stuff (which was not yet used) in the
	  classstore with serialization routines based on QDataStream.
	  In principle, we could now send them around via DCOP :-)
	* Implemented a python support part with parser
	* Implemented a perl support part with parser

2001-04-22  Bernd Gehrmann  <bernd@physik.hu-berlin.de>

	* Made configure arguments configurable
	  Patch by Berndt Josef Wulf <wulf@dingo.ping.net.au>
	* Don't link with libfl in cppsupport and javasupport
	* Each part now uses its own instance and the corresponding
	  resource directory

2001-04-18  Richard Dale <duke@tipitina.demon.co.uk>

	* GDB debugger part sources copied to 'parts/javadebugger', and all names 
          changed to JDB ones. Ready to add jdb functionality.

2001-04-17  Matthias Hoelzer-Kluepfel <mhk@caldera.de>

	* Moved the splitter widget to lib/util, so it can be shared with parts
        * Moved the editor part to lib/kwrite, to allow parts to access it.
	* Added astyle part, a source code reformatter.

2001-04-13  Richard Dale <duke@tipitina.demon.co.uk>

	* Applied patch from Oliver Strutynski to fix bug in the Java tokenizer
	  with non US-ASCII identifiers in source files.

2001-04-11  Matthias Hoelzer-Kluepfel <mhk@caldera.de>

	* Added a plugin that let's you select the parts to load
	  on startup
	* Added some code to core to only load the plugins selected.

2001-04-10  Bernd Gehrmann  <bernd@physik.hu-berlin.de>

	* Added memory view widget
	* Fixed disassemble widget to act only when it is visible
	* Added examine core file and attach to process
	* Cleaning widget after the debugger has finished
	* Added status bar text and whats this
	* Clear execution point mark when debugger has finished

2001-04-10  Matthias Hoelzer-Kluepfel <mhk@caldera.de>

	* added a part to display a "Tip of the day"
	* moved over the tips from the previous HEAD branch,
	  which probably need a review

2001-04-09  Bernd Gehrmann  <bernd@physik.hu-berlin.de>

	* Rewritten the icon border stuff from 1.x for use
	  with multiple views per document
	* Ported the debugger frontend

2001-04-06  Richard Dale <duke@tipitina.demon.co.uk

	* Added Java and Objective-C class browsing, and Java KDE project template and
	automake support (ie the _JAVA primary). Fixed bug in class browser where a 
	method's arguments were not being displayed (was that a bug or a feature?). 
	Clicking on a class's instance variables in the class browser now works and 
	takes you to the source file.


