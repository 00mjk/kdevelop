//This is file has been generated by xmltokross, you should not edit this file but the files used to generate it.

#include <QtCore/QObject>
#include <QtCore/QVariant>
#include <kross/core/manager.h>
#include <kross/core/wrapperinterface.h>
#include <language/duchain/symboltable.h>

class KrossKDevelopSymbolTable : public QObject, public Kross::WrapperInterface
{
	Q_OBJECT
	public:
		KrossKDevelopSymbolTable(KDevelop::SymbolTable* obj, QObject* parent=0) : QObject(parent), wrapped(obj) {}
		void* wrappedObject() const { return wrapped; }

		Q_SCRIPTABLE KDevelop::SymbolTable* self() { return wrapped->self(); }
		Q_SCRIPTABLE void dumpStatistics() const { wrapped->dumpStatistics(); }
		Q_SCRIPTABLE QList< KDevelop::Declaration* > findDeclarations(const KDevelop::QualifiedIdentifier& x0) const { return wrapped->findDeclarations(x0); }
		Q_SCRIPTABLE void findDeclarationsByHash(unsigned int x0, KDevVarLengthArray< KDevelop::Declaration*, int >& x1) const { wrapped->findDeclarationsByHash(x0, x1); }
		Q_SCRIPTABLE QList< KDevelop::DUContext* > findContexts(const KDevelop::QualifiedIdentifier& x0) const { return wrapped->findContexts(x0); }
		Q_SCRIPTABLE void findContextsByHash(unsigned int x0, KDevVarLengthArray< KDevelop::DUContext*, int >& x1) const { wrapped->findContextsByHash(x0, x1); }
	private:
		KDevelop::SymbolTable* wrapped;
};

bool krosssymboltable_registerHandler(const QByteArray& name, Kross::MetaTypeHandler::FunctionPtr* handler)
{ Kross::Manager::self().registerMetaTypeHandler(name, handler); return false; }

namespace Handlers
{
QVariant _kDevelopSymbolTableHandler(void* type)
{
	if(!type) return QVariant();
	KDevelop::SymbolTable* t=static_cast<KDevelop::SymbolTable*>(type);
	return qVariantFromValue((QObject*) new KrossKDevelopSymbolTable(t, 0));
}
bool b_KDevelopSymbolTable=krosssymboltable_registerHandler("KDevelop::SymbolTable*", _kDevelopSymbolTableHandler);

}
#include "krosssymboltable.moc"
