#ifndef KROSSIDENTIFIER_H
#define KROSSIDENTIFIER_H

#include<QtCore/QVariant>

//This is file has been generated by xmltokross, you should not edit this file but the files used to generate it.

namespace KDevelop { class IndexedIdentifier; }
namespace KDevelop { class IndexedQualifiedIdentifier; }
namespace KDevelop { class IndexedTypeIdentifier; }
namespace KDevelop { class Identifier; }
namespace KDevelop { class QualifiedIdentifier; }
namespace KDevelop { class TypeIdentifier; }
namespace Handlers
{
	QVariant _kDevelopIndexedIdentifierHandler(void* type);
	QVariant kDevelopIndexedIdentifierHandler(KDevelop::IndexedIdentifier* type) { return _kDevelopIndexedIdentifierHandler((void*) type); }
	QVariant kDevelopIndexedIdentifierHandler(const KDevelop::IndexedIdentifier* type) { return _kDevelopIndexedIdentifierHandler((void*) type); }

	QVariant _kDevelopIndexedQualifiedIdentifierHandler(void* type);
	QVariant kDevelopIndexedQualifiedIdentifierHandler(KDevelop::IndexedQualifiedIdentifier* type) { return _kDevelopIndexedQualifiedIdentifierHandler((void*) type); }
	QVariant kDevelopIndexedQualifiedIdentifierHandler(const KDevelop::IndexedQualifiedIdentifier* type) { return _kDevelopIndexedQualifiedIdentifierHandler((void*) type); }

	QVariant _kDevelopIndexedTypeIdentifierHandler(void* type);
	QVariant kDevelopIndexedTypeIdentifierHandler(KDevelop::IndexedTypeIdentifier* type) { return _kDevelopIndexedTypeIdentifierHandler((void*) type); }
	QVariant kDevelopIndexedTypeIdentifierHandler(const KDevelop::IndexedTypeIdentifier* type) { return _kDevelopIndexedTypeIdentifierHandler((void*) type); }

	QVariant _kDevelopIdentifierHandler(void* type);
	QVariant kDevelopIdentifierHandler(KDevelop::Identifier* type) { return _kDevelopIdentifierHandler((void*) type); }
	QVariant kDevelopIdentifierHandler(const KDevelop::Identifier* type) { return _kDevelopIdentifierHandler((void*) type); }

	QVariant _kDevelopQualifiedIdentifierHandler(void* type);
	QVariant kDevelopQualifiedIdentifierHandler(KDevelop::QualifiedIdentifier* type) { return _kDevelopQualifiedIdentifierHandler((void*) type); }
	QVariant kDevelopQualifiedIdentifierHandler(const KDevelop::QualifiedIdentifier* type) { return _kDevelopQualifiedIdentifierHandler((void*) type); }

	QVariant _kDevelopTypeIdentifierHandler(void* type);
	QVariant kDevelopTypeIdentifierHandler(KDevelop::TypeIdentifier* type) { return _kDevelopTypeIdentifierHandler((void*) type); }
	QVariant kDevelopTypeIdentifierHandler(const KDevelop::TypeIdentifier* type) { return _kDevelopTypeIdentifierHandler((void*) type); }

}

#endif
