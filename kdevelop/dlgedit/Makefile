# Generated automatically from Makefile.in by configure.
# KDE tags expanded automatically by am_edit - $Revision$ 
# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# set the include path for X, qt and KDE


SHELL = /bin/sh

srcdir = .
top_srcdir = ../..
prefix = /home/smeier/kde
exec_prefix = ${prefix}
#>- 
bindir = $(exec_prefix)/bin
#>+ 3
DEPDIR = .deps

bindir = $(exec_prefix)/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/kdevelop
pkglibdir = $(libdir)/kdevelop
pkgincludedir = $(includedir)/kdevelop

top_builddir = ../..

ACLOCAL = aclocal
AUTOCONF = autoconf
AUTOMAKE = automake
AUTOHEADER = autoheader

INSTALL = /usr/bin/ginstall -c
INSTALL_PROGRAM = ${INSTALL} $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL_PROGRAM}
transform = s,x,x,

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = i686-pc-linux-gnu
build_triplet = i686-pc-linux-gnu
host_alias = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_alias = @target_alias@
target_triplet = @target@
AS = @AS@
AUTODIRS = 
CC = gcc
CPP = gcc -E
CXX = g++
CXXCPP = @CXXCPP@
DCOPIDL = $(kde_bindir)/dcopidl
DCOPIDL2CPP = $(kde_bindir)/dcopidl2cpp
DCOP_DEPENDENCIES = $(DCOPIDL)
DLLTOOL = @DLLTOOL@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
EXEEXT = 
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = /usr/bin/msgfmt
IDL = @IDL@
IDL_DEPENDENCIES = @IDL_DEPENDENCIES@
KDE_CXXFLAGS = 
KDE_EXTRA_RPATH = 
KDE_INCLUDES = -I/home/smeier/kde/include
KDE_LDFLAGS = -L/home/smeier/kde/lib
KDE_RPATH = -rpath $(kde_libraries) -rpath $(qt_libraries) -rpath $(x_libraries)
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
LEX = flex
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBJPEG = -ljpeg
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBPNG = -lpng -lz -lm
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBSM =  -lSM
LIBSOCKET = 
LIBTIFF = -ltiff -ljpeg -lz
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUCB = 
LIBZ = -lz
LIB_KAB = -lkab
LIB_KDECORE = -lkdecore
LIB_KDEUI = -lkdeui
LIB_KFILE = -lkfile
LIB_KFM = 
LIB_KFORMULA = -lformula
LIB_KHTML = -lkhtml
LIB_KIMGIO = -lkimgio
LIB_KIO = -lkio
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_MEDIATOOL = -lmediatool
LIB_QT = -lqt $(LIBPNG) -lXext $(LIB_X11) $(X_PRE_LIBS)
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LN_S = ln -s
MAKEINFO = makeinfo
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = /home/smeier/kde/qt/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CXXFLAGS =  -fno-exceptions -fno-rtti -fno-check-new -Wall -pedantic -W -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -Wno-long-long -fno-builtin
NOREPO = @NOREPO@
OBJDUMP = @OBJDUMP@
OBJEXT = o
PACKAGE = kdevelop
PAMINC = @PAMINC@
PAMLIBPATHS = @PAMLIBPATHS@
PAMLIBS = @PAMLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
QT_INCLUDES = -I/home/smeier/kde/qt/include
QT_LDFLAGS = -L/home/smeier/kde/qt/lib
RANLIB = ranlib
REPO = @REPO@
STRIP = strip
TOPSUBDIRS = @TOPSUBDIRS@
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_NLS = yes
USE_RTTI = -frtti
VERSION = 0.1
XGETTEXT = /usr/bin/xgettext
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = 
X_INCLUDES = -I/usr/X11R6/include
X_LDFLAGS = -L/usr/X11R6/lib
X_PRE_LIBS = 
all_includes = -I/home/smeier/kde/include -I/home/smeier/kde/qt/include -I/usr/X11R6/include 
all_libraries = -L/usr/X11R6/lib -L/home/smeier/kde/qt/lib -L/home/smeier/kde/lib 
idldir = @idldir@
kde_appsdir = $(prefix)/share/applnk
kde_bindir = $(exec_prefix)/bin
kde_cgidir = $(exec_prefix)/cgi-bin
kde_confdir = $(prefix)/share/config
kde_datadir = $(prefix)/share/apps
kde_htmldir = $(prefix)/share/doc/HTML
kde_icondir = $(prefix)/share/icons
kde_includes = /home/smeier/kde/include
kde_libraries = /home/smeier/kde/lib
kde_locale = $(prefix)/share/locale
kde_mimedir = $(prefix)/share/mimelnk
kde_servicesdir = $(prefix)/share/services
kde_servicetypesdir = $(prefix)/share/servicetypes
kde_sounddir = $(prefix)/share/sounds
kde_toolbardir = $(prefix)/share/toolbar
kde_wallpaperdir = $(prefix)/share/wallpapers
micodir = @micodir@
qt_includes = /home/smeier/kde/qt/include
qt_libraries = /home/smeier/kde/qt/lib
x_includes = /usr/X11R6/include
x_libraries = /usr/X11R6/lib

INCLUDES = $(all_includes)

noinst_LIBRARIES = libdlgedit.a

#>- libdlgedit_a_METASOURCES = AUTO

libdlgedit_a_SOURCES = dlgedit.cpp dialogview.cpp dialogwidget.cpp propertyview.cpp widgetsview.cpp widgetspropsplitview.cpp griddlg.cpp

noinst_HEADERS = dlgedit.h dialogview.h dialogwidget.h propertyview.h widgetsview.h widgetspropsplitview.h griddlg.h
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(noinst_LIBRARIES)


DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I../..
CPPFLAGS = 
LDFLAGS = -s
LIBS = 
libdlgedit_a_LIBADD = 
#>- libdlgedit_a_OBJECTS =  dlgedit.$(OBJEXT) dialogview.$(OBJEXT) \
#>- dialogwidget.$(OBJEXT) propertyview.$(OBJEXT) widgetsview.$(OBJEXT) \
#>- widgetspropsplitview.$(OBJEXT) griddlg.$(OBJEXT)
#>+ 6
libdlgedit_a_OBJECTS = dlgedit.$(OBJEXT) dialogview.$(OBJEXT) \
dialogwidget.$(OBJEXT) propertyview.$(OBJEXT) widgetsview.$(OBJEXT) \
widgetspropsplitview.$(OBJEXT) griddlg.$(OBJEXT)\
propertyview.moc.o widgetsview.moc.o dialogview.moc.o dialogwidget.moc.o griddlg.moc.o dlgedit.moc.o widgetspropsplitview.moc.o 
#libdlgedit_a_OBJECTS = libdlgedit_a.all_cpp.o 
libdlgedit_a_final_OBJECTS = libdlgedit_a.all_cpp.o 
AR = ar
CXXFLAGS = -O2 -fno-exceptions -fno-rtti -fno-check-new -Wall -pedantic -W -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -Wno-long-long -fno-builtin
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(noinst_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
#>- DEP_FILES =  .deps/dialogview.P .deps/dialogwidget.P .deps/dlgedit.P \
#>- .deps/griddlg.P .deps/propertyview.P .deps/widgetspropsplitview.P \
#>- .deps/widgetsview.P

#>+ 8
#DEP_FILES =  $(DEPDIR)/propertyview.moc.P $(DEPDIR)/widgetsview.moc.P $(DEPDIR)/dialogview.moc.P $(DEPDIR)/dialogwidget.moc.P $(DEPDIR)/griddlg.moc.P $(DEPDIR)/dlgedit.moc.P $(DEPDIR)/widgetspropsplitview.moc.P  $(DEPDIR)/libdlgedit_a.all_cpp.P \
	  .deps/dialogview.P .deps/dialogwidget.P .deps/dlgedit.P \
.deps/griddlg.P .deps/propertyview.P .deps/widgetspropsplitview.P \
.deps/widgetsview.P
DEP_FILES =  $(DEPDIR)/propertyview.moc.P $(DEPDIR)/widgetsview.moc.P $(DEPDIR)/dialogview.moc.P $(DEPDIR)/dialogwidget.moc.P $(DEPDIR)/griddlg.moc.P $(DEPDIR)/dlgedit.moc.P $(DEPDIR)/widgetspropsplitview.moc.P   .deps/dialogview.P .deps/dialogwidget.P .deps/dlgedit.P \
.deps/griddlg.P .deps/propertyview.P .deps/widgetspropsplitview.P \
.deps/widgetsview.P
SOURCES = $(libdlgedit_a_SOURCES)
OBJECTS = $(libdlgedit_a_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
#>- 	cd $(top_srcdir) && $(AUTOMAKE) --gnu kdevelop/dlgedit/Makefile
#>+ 2
	cd $(top_srcdir) && $(AUTOMAKE) --gnu kdevelop/dlgedit/Makefile
	cd $(top_srcdir) && perl admin/am_edit kdevelop/dlgedit/Makefile.in

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-noinstLIBRARIES:

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

distclean-noinstLIBRARIES:

maintainer-clean-noinstLIBRARIES:

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libdlgedit.a: $(libdlgedit_a_OBJECTS) $(libdlgedit_a_DEPENDENCIES)
	-rm -f libdlgedit.a
	$(AR) cru libdlgedit.a $(libdlgedit_a_OBJECTS) $(libdlgedit_a_LIBADD)
	$(RANLIB) libdlgedit.a
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = kdevelop/dlgedit

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu kdevelop/dlgedit/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp

%.o: %.cpp
	@echo '$(CXXCOMPILE) -c $<'; \
	$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.cpp
	@echo '$(LTCXXCOMPILE) -c $<'; \
	$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am:
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am:
uninstall: uninstall-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-noinstLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags mostlyclean-depend \
		mostlyclean-generic

mostlyclean: mostlyclean-am

#>- clean-am:  clean-noinstLIBRARIES clean-compile clean-libtool clean-tags \
#>- 		clean-depend clean-generic mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-final   clean-noinstLIBRARIES clean-compile clean-libtool clean-tags \
		clean-depend clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-noinstLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-depend \
		distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-noinstLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-depend \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-noinstLIBRARIES distclean-noinstLIBRARIES \
clean-noinstLIBRARIES maintainer-clean-noinstLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir \
mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
propertyview.moc.cpp: $(srcdir)/propertyview.h
	$(MOC) $(srcdir)/propertyview.h -o propertyview.moc.cpp

#>+ 3
widgetsview.moc.cpp: $(srcdir)/widgetsview.h
	$(MOC) $(srcdir)/widgetsview.h -o widgetsview.moc.cpp

#>+ 3
dialogview.moc.cpp: $(srcdir)/dialogview.h
	$(MOC) $(srcdir)/dialogview.h -o dialogview.moc.cpp

#>+ 3
dialogwidget.moc.cpp: $(srcdir)/dialogwidget.h
	$(MOC) $(srcdir)/dialogwidget.h -o dialogwidget.moc.cpp

#>+ 3
griddlg.moc.cpp: $(srcdir)/griddlg.h
	$(MOC) $(srcdir)/griddlg.h -o griddlg.moc.cpp

#>+ 3
dlgedit.moc.cpp: $(srcdir)/dlgedit.h
	$(MOC) $(srcdir)/dlgedit.h -o dlgedit.moc.cpp

#>+ 3
widgetspropsplitview.moc.cpp: $(srcdir)/widgetspropsplitview.h
	$(MOC) $(srcdir)/widgetspropsplitview.h -o widgetspropsplitview.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  propertyview.moc.cpp widgetsview.moc.cpp dialogview.moc.cpp dialogwidget.moc.cpp griddlg.moc.cpp dlgedit.moc.cpp widgetspropsplitview.moc.cpp

#>+ 2
docs: docs-am

#>+ 2
docs-am:

#>+ 5
force-reedit:
		cd $(top_srcdir) && $(AUTOMAKE) --gnu kdevelop/dlgedit/Makefile
	cd $(top_srcdir) && perl admin/am_edit kdevelop/dlgedit/Makefile.in


#>+ 11
libdlgedit_a.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/dlgedit.cpp $(srcdir)/dialogview.cpp $(srcdir)/dialogwidget.cpp $(srcdir)/propertyview.cpp $(srcdir)/widgetsview.cpp $(srcdir)/widgetspropsplitview.cpp $(srcdir)/griddlg.cpp  propertyview.moc.cpp widgetsview.moc.cpp dialogview.moc.cpp dialogwidget.moc.cpp griddlg.moc.cpp dlgedit.moc.cpp widgetspropsplitview.moc.cpp
	@echo 'creating libdlgedit_a.all_cpp.cpp ...'; \
	rm -f libdlgedit_a.all_cpp.files libdlgedit_a.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libdlgedit_a.all_cpp.final; \
	for file in dlgedit.cpp dialogview.cpp dialogwidget.cpp propertyview.cpp widgetsview.cpp widgetspropsplitview.cpp griddlg.cpp  propertyview.moc.cpp widgetsview.moc.cpp dialogview.moc.cpp dialogwidget.moc.cpp griddlg.moc.cpp dlgedit.moc.cpp widgetspropsplitview.moc.cpp; do \
	  echo "#include \"$$file\"" >> libdlgedit_a.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libdlgedit_a.all_cpp.final; \
	done; \
	cat libdlgedit_a.all_cpp.final libdlgedit_a.all_cpp.files  > libdlgedit_a.all_cpp.cpp; \
	rm -f libdlgedit_a.all_cpp.final libdlgedit_a.all_cpp.files

#>+ 3
clean-final:
	-rm -f libdlgedit_a.all_cpp.cpp

#>+ 2
final:
	$(MAKE) libdlgedit_a_OBJECTS="$(libdlgedit_a_final_OBJECTS)" all-am
#>+ 3
cvs-clean:
	$(MAKE) -f $(top_srcdir)/admin/Makefile.common cvs-clean
