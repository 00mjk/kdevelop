# Generated automatically from Makefile.in by configure.
# Makefile.in generated automatically by automake 1.3 from Makefile.am

# Copyright (C) 1994, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# set the include path for X, qt and KDE


SHELL = /bin/sh

srcdir = .
top_srcdir = ../..
prefix = /home/smeier/kde
exec_prefix = ${prefix}

bindir = /home/smeier/kde/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include

DISTDIR =

pkgdatadir = $(datadir)/kdevelop
pkglibdir = $(libdir)/kdevelop
pkgincludedir = $(includedir)/kdevelop

top_builddir = ../..

ACLOCAL = aclocal
AUTOCONF = autoconf
AUTOMAKE = automake
AUTOHEADER = autoheader

INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL_PROGRAM}
transform = s,x,x,

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = i586-pc-linux-gnu
host_triplet = i586-pc-linux-gnu
target_alias = @target_alias@
target_triplet = @target@
CC = gcc
CPP = gcc -E
CXX = g++
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = /usr/bin/msgfmt
IDL = @IDL@
KDE_EXTRA_RPATH = 
KDE_INCLUDES = -I/home/smeier/kde/include
KDE_LDFLAGS = -L/home/smeier/kde/lib
KDE_RPATH = -rpath $(kde_libraries) -rpath $(x_libraries)
LD = /usr/i486-linux/bin/ld
LEX = flex
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = @LIBDL@
LIBJPEG = -ljpeg
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBPNG = 
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBSOCKET = 
LIBTIFF = -ltiff -ljpeg -lz
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = @LIBUTIL@
LIBXDMCP = @LIBXDMCP@
LIBZ = -lz
LIB_KDECORE = -lkdecore -lXext $(LIB_QT)
LIB_KDEUI = -lkdeui $(LIB_KDECORE)
LIB_KFILE = -lkfile $(LIB_KFM) $(LIB_KDEUI)
LIB_KFM = -lkfm $(LIB_KDECORE)
LIB_KHTML = -lkhtml $(LIB_KIMGIO) -ljscript
LIB_KHTMLW = -lkhtmlw $(LIB_KIMGIO) -ljscript
LIB_KIMGIO = -lkimgio $(LIBJPEG) $(LIBTIFF) $(LIBPNG) -lm
LIB_LIBS = @LIB_LIBS@
LIB_QT = -lqt $(LIB_X11)
LIB_X11 = -lX11 $(LIBSOCKET)
LN_S = ln -s
MAKEINFO = makeinfo
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = /usr/lib/qt/bin/moc
MSGFMT = /usr/bin/msgfmt
NM = /usr/bin/nm -B
PACKAGE = kdevelop
PAMINC = @PAMINC@
PAMLIBPATHS = @PAMLIBPATHS@
PAMLIBS = @PAMLIBS@
PASSWDLIB = @PASSWDLIB@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
QT_INCLUDES = -I/usr/lib/qt/include
QT_LDFLAGS = 
RANLIB = ranlib
USE_NLS = yes
VERSION = 
XBINDIR = @XBINDIR@
XGETTEXT = /usr/bin/xgettext
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = 
X_INCLUDES = -I/usr/X11R6/include
X_LDFLAGS = -L/usr/X11R6/lib
X_SERVER = @X_SERVER@
ac_xdmdir = @ac_xdmdir@
all_includes = -I/home/smeier/kde/include -I/usr/lib/qt/include  -I/usr/X11R6/include
all_libraries = -L/home/smeier/kde/lib  -L/usr/X11R6/lib
install_root = 
kde_appsdir = /home/smeier/kde/share/applnk
kde_bindir = /home/smeier/kde/bin
kde_cgidir = /home/smeier/kde/cgi-bin
kde_confdir = /home/smeier/kde/share/config
kde_datadir = /home/smeier/kde/share/apps
kde_htmldir = /home/smeier/kde/share/doc/HTML
kde_icondir = /home/smeier/kde/share/icons
kde_includes = /home/smeier/kde/include
kde_libraries = /home/smeier/kde/lib
kde_locale = /home/smeier/kde/share/locale
kde_mimedir = /home/smeier/kde/share/mimelnk
kde_minidir = /home/smeier/kde/share/icons/mini
kde_partsdir = /home/smeier/kde/parts
kde_sounddir = /home/smeier/kde/share/sounds
kde_toolbardir = /home/smeier/kde/share/toolbar
kde_wallpaperdir = /home/smeier/kde/share/wallpapers
qt_includes = /usr/lib/qt/include
qt_libraries = 
x_includes = /usr/X11R6/include
x_libraries = /usr/X11R6/lib
xdmconfigsubdir = @xdmconfigsubdir@

INCLUDES= $(all_includes)

noinst_LIBRARIES = libkdlgedit.a

# libkdlgedit_a_METASOURCES =  kdlgdialogs.moc.cpp kdlgedit.moc.cpp kdlgeditwidget.moc.cpp kdlgnewwidget.moc.cpp kdlgproplvis.moc.cpp kdlgpropwidget.moc.cpp kdlgwidgets.moc.cpp 
libkdlgedit_a_METASOURCES =  kdlgdialogs.moc.cpp kdlgedit.moc.cpp kdlgeditwidget.moc.cpp kdlgnewwidget.moc.cpp kdlgproplvis.moc.cpp kdlgpropwidget.moc.cpp kdlgwidgets.moc.cpp 

libkdlgedit_a_SOURCES = kdlgedit.cpp kdlgeditwidget.cpp kdlgpropwidget.cpp kdlgwidgets.cpp kdlgdialogs.cpp kdlgnewwidget.cpp\
                       kdlgedit.moc.cpp kdlgeditwidget.moc.cpp kdlgpropwidget.moc.cpp kdlgwidgets.moc.cpp kdlgdialogs.moc.cpp kdlgnewwidget.moc.cpp kdlgproplvis.moc.cpp

noinst_HEADERS = kdlgedit.h kdlgeditwidget.h kdlgpropwidget.h kdlgwidgets.h kdlgdialogs.h kdlgnewwidget.h kdlgproplvis.h
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(noinst_LIBRARIES)


DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I../..
CPPFLAGS = 
LDFLAGS = -s
LIBS = 
libkdlgedit_a_LIBADD = 
libkdlgedit_a_OBJECTS =  kdlgedit.o kdlgeditwidget.o kdlgpropwidget.o \
kdlgwidgets.o kdlgdialogs.o kdlgnewwidget.o kdlgedit.moc.o \
kdlgeditwidget.moc.o kdlgpropwidget.moc.o kdlgwidgets.moc.o \
kdlgdialogs.moc.o kdlgnewwidget.moc.o kdlgproplvis.moc.o
AR = ar
CXXFLAGS = -O2 -Wall
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS)
CXXLINK = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(noinst_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP = --best
DEP_FILES =  .deps/kdlgdialogs.P .deps/kdlgdialogs.moc.P \
.deps/kdlgedit.P .deps/kdlgedit.moc.P .deps/kdlgeditwidget.P \
.deps/kdlgeditwidget.moc.P .deps/kdlgnewwidget.P \
.deps/kdlgnewwidget.moc.P .deps/kdlgproplvis.moc.P \
.deps/kdlgpropwidget.P .deps/kdlgpropwidget.moc.P .deps/kdlgwidgets.P \
.deps/kdlgwidgets.moc.P
CXXMKDEP = $(CXX) -M $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS)
SOURCES = $(libkdlgedit_a_SOURCES)
OBJECTS = $(libkdlgedit_a_OBJECTS)

all: Makefile $(LIBRARIES) $(HEADERS)

.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && $(AUTOMAKE) --gnu kdevelop/kdlgedit/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-noinstLIBRARIES:

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

distclean-noinstLIBRARIES:

maintainer-clean-noinstLIBRARIES:

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libkdlgedit.a: $(libkdlgedit_a_OBJECTS) $(libkdlgedit_a_DEPENDENCIES)
	-rm -f libkdlgedit.a
	$(AR) cru libkdlgedit.a $(libkdlgedit_a_OBJECTS) $(libkdlgedit_a_LIBADD)
	$(RANLIB) libkdlgedit.a
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $(SOURCES) $(HEADERS) $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = kdevelop/kdlgedit

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu kdevelop/kdlgedit/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:

maintainer-clean-depend:
	-rm -rf .deps

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).P -c $<

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).p -c $<
	@-sed -e 's/^\([^:]*\)\.o:/\1.lo \1.o:/' \
	  < .deps/$(*F).p > .deps/$(*F).P
	@-rm -f .deps/$(*F).p

%.o: %.cpp
	@echo '$(CXXCOMPILE) -c $<'; \
	$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).P -c $<

%.lo: %.cpp
	@echo '$(LTCXXCOMPILE) -c $<'; \
	$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*F).p -c $<
	@-sed -e 's/^\([^:]*\)\.o:/\1.lo \1.o:/' \
	  < .deps/$(*F).p > .deps/$(*F).P
	@-rm -f .deps/$(*F).p
info:
dvi:
check: all
	$(MAKE)
installcheck:
install-exec: 
	@$(NORMAL_INSTALL)

install-data: 
	@$(NORMAL_INSTALL)

install: install-exec install-data all
	@:

uninstall: 

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' INSTALL_SCRIPT='$(INSTALL_PROGRAM)' install
installdirs:


mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(DISTCLEANFILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-noinstLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags mostlyclean-depend \
		mostlyclean-generic

clean:  clean-noinstLIBRARIES clean-compile clean-libtool clean-tags \
		clean-depend clean-generic mostlyclean

distclean:  distclean-noinstLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-depend \
		distclean-generic clean
	-rm -f config.status
	-rm -f libtool

maintainer-clean:  maintainer-clean-noinstLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-depend \
		maintainer-clean-generic distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: mostlyclean-noinstLIBRARIES distclean-noinstLIBRARIES \
clean-noinstLIBRARIES maintainer-clean-noinstLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir \
mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info dvi installcheck install-exec install-data \
install uninstall all installdirs mostlyclean-generic distclean-generic \
clean-generic maintainer-clean-generic clean mostlyclean distclean \
maintainer-clean


kdlgdialogs.moc.cpp: kdlgdialogs.h
	$(MOC) kdlgdialogs.h -o kdlgdialogs.moc.cpp

kdlgedit.moc.cpp: kdlgedit.h
	$(MOC) kdlgedit.h -o kdlgedit.moc.cpp

kdlgeditwidget.moc.cpp: kdlgeditwidget.h
	$(MOC) kdlgeditwidget.h -o kdlgeditwidget.moc.cpp

kdlgnewwidget.moc.cpp: kdlgnewwidget.h
	$(MOC) kdlgnewwidget.h -o kdlgnewwidget.moc.cpp

kdlgproplvis.moc.cpp: kdlgproplvis.h
	$(MOC) kdlgproplvis.h -o kdlgproplvis.moc.cpp

kdlgpropwidget.moc.cpp: kdlgpropwidget.h
	$(MOC) kdlgpropwidget.h -o kdlgpropwidget.moc.cpp

kdlgwidgets.moc.cpp: kdlgwidgets.h
	$(MOC) kdlgwidgets.h -o kdlgwidgets.moc.cpp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
