## generate API documentation with doxygen
apidox-am-yes:
	$(mkinstalldirs) $(top_builddir)/apidocs/$(subdir) ;\
	if test ! -x $(top_builddir)/apidocs/common; then \
		if test -d $(top_srcdir)/doc/common; then \
			common_dir=`cd $(top_srcdir)/doc/common && pwd` ;\
		else \
			common_dir=$(kde_libs_htmldir)/en/common ;\
		fi ;\
		$(LN_S) $$common_dir $(top_builddir)/apidocs/common; \
	fi ;\
	cp $(top_srcdir)/admin/Doxyfile.global Doxyfile; \
	echo "PROJECT_NAME           = \"$(subdir) Library\"" >> Doxyfile; \
	echo "PROJECT_NUMBER         = \"Version $(VERSION)\"" >> Doxyfile; \
	echo "INPUT                  = $(srcdir)" >> Doxyfile; \
	echo "IMAGE_PATH             = $(top_srcdir)/doc/api" >> Doxyfile ;\
	echo "OUTPUT_DIRECTORY       = $(top_builddir)/apidocs" >> Doxyfile; \
	echo "HTML_OUTPUT            = $(subdir)/html" >> Doxyfile; \
	echo "LATEX_OUTPUT           = $(subdir)/latex" >> Doxyfile; \
	echo "RTF_OUTPUT             = $(subdir)/rtf" >> Doxyfile; \
	echo "MAN_OUTPUT             = $(subdir)/man" >> Doxyfile; \
	echo "GENERATE_HTML          = $(GENERATE_FLAG)" >> Doxyfile ;\
	echo "GENERATE_MAN           = $(GENERATE_FLAG)" >> Doxyfile ;\
	echo "GENERATE_LATEX         = $(GENERATE_FLAG)" >> Doxyfile ;\
	if test -n "$(DOXYGEN_EXCLUDE)"; then \
		patterns= ;\
		dirs= ;\
		for item in "$(DOXYGEN_EXCLUDE)"; do \
			if test -d "$(srcdir)/$$item"; then \
				dirs="$$dirs $(srcdir)/$$item/" ;\
			else \
				patterns="$$paterns $$item" ;\
			fi ;\
		done ;\
		echo "EXCLUDE_PATTERNS      += $$patterns" >> Doxyfile; \
		echo "EXCLUDE               += $$dirs" >> Doxyfile ;\
	fi ;\
	echo "TAGFILES = \\" >> Doxyfile; \
	tags='$(DOXYGEN_REFERENCES) qt'; for tag in $$tags; do \
		tagpath= ;\
		path="../../$$tag" ;\
		if test -f $(top_builddir)/apidocs/$$tag/$$tag.tag; then \
			tagpath="$(top_builddir)/apidocs/$$tag/$$tag.tag" ;\
		else \
			tagpath=`ls -1 $(kde_htmldir)/en/*-apidocs/$$tag/$$tag.tag 2> /dev/null` ;\
			if test -n "$$tagpath"; then \
				path=`echo $$tagpath | sed -e "s,.*/\([^/]*-apidocs\)/$$tag/$$tag.tag,../../../\1/$$tag,"` ;\
			fi ;\
		fi ;\
		if test "$$tag" = qt; then \
			echo $$tagpath=$(QTDOCDIR) >> Doxyfile ;\
		else if test -n "$$tagpath"; then \
			echo "$$tagpath=$$path/html \\" >> Doxyfile ;\
		fi ;\
		fi ;\
	done ;\
	echo "GENERATE_TAGFILE       = $(top_builddir)/apidocs/$(subdir)/$(subdir).tag" >> Doxyfile ;\
	echo "IGNORE_PREFIX          = K" >> Doxyfile ;\
	echo "HAVE_DOT = $(KDE_HAVE_DOT)" >> Doxyfile ;\
	$(DOXYGEN) Doxyfile ;

apidox-am-no:

install-data-local: install-apidox

## install API documentation
install-apidox:
		$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir)/html ; \
		if test -f $(top_builddir)/apidocs/$(subdir)/$(subdir).tag; then \
		echo $(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/$(subdir).tag $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		$(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/$(subdir).tag $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		fi; \
		if test -d $(top_builddir)/apidocs/$(subdir)/html; then \
			list=`ls $(top_builddir)/apidocs/$(subdir)/html`; \
			echo "installing $(top_builddir)/apidocs/$(subdir)/html" ;\
			for file in $$list; do \
				$(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/html/$$file $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir)/html; \
		done; \
		fi; \
		rm -f $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/common; \
		$(LN_S) $(kde_libs_htmldir)/en/common $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/common;

uninstall-local: uninstall-apidox

## uninstall API documentation
uninstall-apidox:
	if test -d $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); then \
		rm -rfv $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
	fi

apidox:
	$(MAKE) apidox-am-@KDE_HAS_DOXYGEN@ ;\
	@set fnord $(MAKEFLAGS); amf=$$2; if test -n '$(SUBDIRS)'; then \
	    list='$(SUBDIRS)'; \
	    for subdir in $$list; do \
		if grep '^include .*Doxyfile.am' $(srcdir)/$$subdir/Makefile.am; then \
		echo "Making apidox in $$subdir"; \
		if test "$$subdir" != "."; then \
			(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) GENERATE_FLAG=no apidox) || exit 1; \
		fi ; fi ;\
	    done; \
	    for subdir in $$list; do \
		if grep '^include .*Doxyfile.am' $(srcdir)/$$subdir/Makefile.am; then \
		echo "Making apidox in $$subdir"; \
		if test "$$subdir" != "."; then \
			(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) GENERATE_FLAG=yes apidox) || exit 1; \
		fi ; fi ;\
	    done; \
	fi

.PHONY: apidox-am-yes apidox-am-no install-data-local install-apidox install-apidox uninstall-local uninstall-apidox uninstall-apidox apidox


# Local Variables:
# mode: makefile
# End:
